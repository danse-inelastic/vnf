# -*- Python -*-
# auto-generated by mcstas-component-to-dom
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2010  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
from Monitor import Monitor as base
class EMonitor(base):
    nchan = 20
    xmin = 0.0
    xmax = 0.0
    ymin = 0.0
    ymax = 0.0
    xwidth = 0.20000000000000001
    yheight = 0.20000000000000001
    Emin = 10.0
    Emax = 100.0
    def customizeLubanObjectDrawer(self, drawer):
        drawer.mold.sequence = ['componentname', 'short_description', 'referencename', 'position', 'orientation', 'nchan', 'xmin', 'xmax', 'ymin', 'ymax', 'xwidth', 'yheight', 'Emin', 'Emax']
InvBase=base.Inventory
class Inventory(InvBase):
    nchan = InvBase.d.int(name='nchan', default=20)
    nchan.help = 'Number of energy channels (1) '
    xmin = InvBase.d.float(name='xmin', default=0.0)
    xmin.help = 'Lower x bound of detector opening (m) '
    xmax = InvBase.d.float(name='xmax', default=0.0)
    xmax.help = 'Upper x bound of detector opening (m) '
    ymin = InvBase.d.float(name='ymin', default=0.0)
    ymin.help = 'Lower y bound of detector opening (m) '
    ymax = InvBase.d.float(name='ymax', default=0.0)
    ymax.help = 'Upper y bound of detector opening (m) '
    xwidth = InvBase.d.float(name='xwidth', default=0.20000000000000001)
    xwidth.help = 'Width/diameter of detector (x). Overrides xmin,xmax. (m) '
    yheight = InvBase.d.float(name='yheight', default=0.20000000000000001)
    yheight.help = 'Height of detector (y). Overrides ymin,ymax. (m) '
    Emin = InvBase.d.float(name='Emin', default=10.0)
    Emin.help = 'Minimum energy to detect (meV) '
    Emax = InvBase.d.float(name='Emax', default=100.0)
    Emax.help = 'Maximum energy to detect (meV) '
    dbtablename = 'emonitors'
EMonitor.Inventory = Inventory
del Inventory
from _ import o2t, MonitorTableBase
EMonitorTable = o2t(EMonitor, {'subclassFrom': MonitorTableBase})
# version
__id__ = "$Id$"

# End of file 
