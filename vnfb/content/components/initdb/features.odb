#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                Jiao Lin
#                      California Institute of Technology
#                        (C) 2008  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from pyre.components.Component import Component as base


class Component(base):


    class Inventory(base.Inventory):

        import pyre.inventory


    def initdb(self):
        db = self.director.clerk.db
        for r in features: db.insertRow( r )
        return


from vnfb.dom.Feature import FeatureTable as Table
def feature(id, description, status, developer):
    r = Table()
    r.id = id
    r.description = description
    r.status = status
    r.developer = developer
    return r


features = [
    feature('mcvine', 'The Monte Carlo instrument simulation package',
            'active', 'linjiao'),
    feature('bvk', 'The Born-von Karman (bvk) package',
            'active', 'linjiao'),
    feature('gulp-md', 'Forcefield-based molecular dynamics',
            'active', 'brandon'),
    feature('gulp-phonons', 'Forcefield-based phonon calculator',
            'active', 'brandon'),
    feature('gulp-mc', 'Forcefield-based Monte-Carlo',
            'active', 'brandon'),
    feature('sqe-md', 'S(Q,E) calculator from md',
            'active', 'brandon'),
    feature('sq-md', 'EISF, S(Q) calculator from md',
            'active', 'brandon'),
    feature('sqe-phonons', 'S(Q,E) calculator from phonons',
            'inactive', 'brandon'),
    feature('dos', 'DOS calculator from md',
            'active', 'brandon'),
    feature('dyn', 'Dynamics analysis from md (MSD, VACF, RDF, etc.)',
            'active', 'brandon'),
    feature('cod', 'Import from Crystallographic Open Database',
            'inactive', 'brandon'),
    feature('coherentinelasticphononkernel', 'Coherent-inelastic phonon scattering kernel',
            'active', 'linjiao'),
    feature('quantumespresso', 'Quantum Espresso electronic structure',
            'active', 'alex'),
    feature('quantumespresso-phonon', 'Quantum Espresso phonon calculator',
            'active', 'alex'),
    feature('quantumespresso-md', 'Quantum Espresso molecular dynamics',
            'inactive', 'alex'),

    ]


def initdb(): return Component('initdb-features', 'initdb')


# version
__id__ = "$Id$"

# End of file 
