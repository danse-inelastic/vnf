#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

import os
from vnfb.utils.qeparser.qeinput import QEInput
from vnfb.utils.qeparser.namelist import Namelist
from vnfb.utils.qeconst import ZASR
from vnfb.utils.qeutils import remoteResultsPath

from luban.components.AuthorizedActor import AuthorizedActor as base

# Requires simulation id,
class Actor(base):

    class Inventory(base.Inventory):
        import pyre.inventory
        id          = pyre.inventory.str('id', default='')          # Simulation Id
        taskid      = pyre.inventory.str('taskid', default='')
        type        = pyre.inventory.str('type', default='')
        structureid = pyre.inventory.str('structureid', default='')
        zasr        = pyre.inventory.str('zasr', default='')        # Type of the configuration file

    def generateInput(self, director):
        return director.redirect(actor   = 'material_simulations/espresso/input-create',
                                routine = 'default',
                                text    = self._input(director),
                                id      = self.inventory.id,
                                taskid  = self.inventory.taskid)

    def _input(self, director):
        input      = QEInput(type='q2r')
        nl  = Namelist("input")

        # E.g.: /home/dexity/espresso/qejobs/5YWWTCQT/matdyn
        # Get jobs directory of PH simulation task
        path    = remoteResultsPath(director, self.inventory.id, "PH")   #self._fcpath(director)
        fildyn  = os.path.join(path, "matdyn")  # "matdyn" - default value for PH fildyn
        zasr    = ZASR[ZASR.keys()[int(self.inventory.zasr)]]

        nl.add("fildyn", "'%s'" % fildyn)
        nl.add("zasr", zasr)
        nl.add("flfrc", "'ni.fc'")  # XXX
        input.addNamelist(nl)
        return input.toString()


    def __init__(self):
        super(Actor, self).__init__(name='material_simulations/espresso-utils/generate-q2r')

        return


    def _configure(self):
        super(Actor, self)._configure()
        self.id             = self.inventory.id
        self.taskid         = self.inventory.taskid
        self.type           = self.inventory.type
        self.structureid    = self.inventory.structureid
        self.zasr           = self.inventory.zasr


    def _init(self):
        super(Actor, self)._init()
        return

def actor():
    return Actor()

__date__ = "$Jan 13, 2010 4:29:22 AM$"

