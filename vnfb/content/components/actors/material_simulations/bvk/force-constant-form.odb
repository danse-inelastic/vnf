#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from luban.content import load, select, alert
import luban.content as lc


from luban.components.Actor import Actor as base

class Actor(base):


    class Inventory(base.Inventory):

        import pyre.inventory

        id = pyre.inventory.str('id')
        id.meta['tip'] = 'id of bvk model'

        bondindex = pyre.inventory.int('bondindex')
        bondiseditable = pyre.inventory.bool('bondiseditable')
        
        siteA = pyre.inventory.int('siteA')
        siteB = pyre.inventory.int('siteB')

        siteB_offset_a = pyre.inventory.int('siteB_offset_a')
        siteB_offset_b = pyre.inventory.int('siteB_offset_b')
        siteB_offset_c = pyre.inventory.int('siteB_offset_c')

        #matrix
        for i in range(3):
            for j in range(3):
                name = 'm%s%s' % (i,j)
                code = '%s=pyre.inventory.float("%s")' % (name, name)
                exec code
        
        

    def process(self, director):
        si = self.inventory
        
        id = si.id
        bondindex = si.bondindex
        bondiseditable = si.bondiseditable

        siteA = si.siteA
        siteB = si.siteB

        offsetB = [
            si.siteB_offset_a,
            si.siteB_offset_b,
            si.siteB_offset_c,
            ]

        m = [
            [si.m00, si.m01, si.m02],
            [si.m10, si.m11, si.m12],
            [si.m20, si.m21, si.m22],
            ]
            
        return alert(str((id, bondindex, bondiseditable, siteA, siteB, offsetB, m)))
    

def actor(): return Actor('test')


# version
__id__ = "$Id$"

# End of file 

