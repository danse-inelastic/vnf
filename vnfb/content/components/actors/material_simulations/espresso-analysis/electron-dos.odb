#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

from vnfb.qeutils.qeconst import LINKORDER
from vnfb.components.QEAnalysis import Actor as base

class Actor(base):


    def _simData(self, director, splitter):
        "Shows phonon specific data (phonon DOS, dispersion)"
        self._dosresult      = DOSResult(director, self.id)
        self._matdynresult  = MATDYNResult(director, self.id)   # Latest results
        self._mddosresult   = MATDYNResult(director, self.id, SUBTYPE_DOS)   # DOS results
        # Add dispersion results?


        self._phononDos(director, splitter)


    def _showPlot(self, director, section):
        "Plot electron DOS"
        dosfile      = self._dosFile()

        if dosfile is None:
            return

        section.add(lc.paragraph(text="Electron DOS", Class="qe-section"))

        # Populate 'x', 'y' and 'z' (cumulative) lists from file
        (e,  up,  down,  cum) = parseFile(dosfile)

        plot = lc.plot2d(Class="default-size-plot")
        plot.curve(x=e, y=up, label='Spin Up')
        plot.curve(x=e, y=down, label='Spin Down')

        section.add(plot)


    # DOS simulation task. Should have ni.dos file
    def _dosFile(self):
        "Retruns absolute path of the DOS file"
        # Example: "/home/dexity/exports/vnf/vnfb/content/data/tmp/tmpVr7_LD/4IJW2PEI/ni.dos" v
        for jit in self._jitlist:
            if jit[0] is None:   # If job is None
                continue

            if jit[1] is not None and jit[2].linkorder == LINKORDER["DOS"]:   # DOS type
                dataroot    = self._dataroot()
                results     = ResultInfo(self._director, self.id, LINKORDER["DOS"])
                if results.ready():
                    path        = os.path.join(results.tardir(), "ni.dos")  # dos name is hardcoded
                    filepath    = os.path.join(dataroot, path)
                    return filepath

        return None


def actor():
    return Actor(name='material_simulations/espresso-analysis/electron-dos')

__date__ = "$Mar 14, 2010 9:37:41 AM$"


