#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


import luban.content as lc
from luban.content import load, select, alert

from luban.components.AuthorizedActor import AuthorizedActor as base


class Actor(base):


    class Inventory(base.Inventory):

        import pyre.inventory

        selected = pyre.inventory.str(name='selected')


    def default(self, director):
        p = lc.page()
        doc = p.document(id='main-display-area')
        
        link = lc.link(
            label = 'click me to load',
            onclick=load(actor=self.name, routine='showme'),
            )
        doc.add(link)
        return p


    def showme(self, director):
        # the overall document
        doc1 = lc.document(title='whatever document needs a sample selector')

        # the container of the sample selector
        container = doc1.document(id='sample-selector-container')
        container.oncreate = select(element=container).append(
            load(actor='selectonesample', routine='createListView')
            )

        # the button
        b = lc.button(label='next'); doc1.add(b)
        b.onclick = load(
            actor=self.name, routine='processSelectioin',
            selected=select(id='sample-table').table(
                'getIdentifiersForSelectedRow', colname='selectone'),
            )
        return select(id='main-display-area').replaceContent(doc1)


    def processSelectioin(self, director):
        return alert('selected sample %s' % self.inventory.selected)
    
    
    def __init__(self, name='test-selectonesample'):
        super(Actor, self).__init__(name)
        return


def actor(): return Actor()


# version
__id__ = "$Id$"

# End of file 

