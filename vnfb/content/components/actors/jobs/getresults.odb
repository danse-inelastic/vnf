#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

from luban.content import load

from luban.components.AuthorizedActor import AuthorizedActor as base

class Actor(base):

    class Inventory(base.Inventory):
        import pyre.inventory
        id          = pyre.inventory.str('id', default='')  # Simulation Id
        taskid      = pyre.inventory.str('taskid', default='')


    def default(self, director):
        "Not implemented"
        pass


    def retrieveStatus(self, director):
#        inputs  = director.clerk.getQEConfigurations(where = "simulationid='%s'" % self.id)
#        input   = inputs[0]
#
#        return self._packingInProgress(director, input)
        return self._retrieveResults(director)


    def _retrieveResults(self, director):
        inputs  = director.clerk.getQEConfigurations(where = "simulationid='%s'" % self.id)
        input   = inputs[0]

        from vnf.applications.PackJobDir import PackJobDir
        PTRFILEEXT = PackJobDir.PTRFILEEXT
        ptrfilepath = '.'.join( [director.dds.abspath(input), PTRFILEEXT] )

        # if pointer file does not exists, need to start packing
        if not os.path.exists(ptrfilepath):
            return self._startPacking(director, input)

        # if packing is in process, say that
        s = open(ptrfilepath).read()
        if s == PackJobDir.PACKINGINPROCESS:
            return self._packingInProgress(director, input)


        server      = server  = director.clerk.getServers(id='server001')
        jobmtime    = director.dds.getmtime(input, server = server)
        ptrmtime    = os.path.getmtime(ptrfilepath)
        if jobmtime > ptrmtime + 60*3: # 60*3 -- give 3 minute of delay
            # if job directory is newer than the bar ball, pack again
            return self._startPacking(director, input)

        link    = Link(label="Downloaded", Class="action-link",
                       onclick=load(actor      = "material_simulations/espresso/sim-view",
                                     id         = self.id)
                      )

        return select(id='results-link').replaceContent(link)


    def _startPacking(self, director, input):
        from vnf.components.Job import pack
        pack(input, director, debug=False)

        return self._packingInProgress(director, input)


    def _packingInProgress(self, director, input):
        link    = Link(label="Packing", Class="action-link",
                       onclick=load(actor      = "material_simulations/espresso/sim-view",
                                     id         = self.id)
                      )

        return select(id='results-link').replaceContent(link)



    def formError(self, errors):
        return [
                select(id='%s-error-area' % key).replaceContent(value)
                    for key, value in errors.iteritems()
                ]

    def __init__(self):
        super(Actor, self).__init__(name='jobs/getresults')

        return


    def _configure(self):
        super(Actor, self)._configure()
        self.id         = self.inventory.id
        self.taskid     = self.inventory.taskid


    def _init(self):
        super(Actor, self)._init()
        self._files = []
        return

def actor():
    return Actor()


__date__ = "$Dec 17, 2009 11:39:10 AM$"


