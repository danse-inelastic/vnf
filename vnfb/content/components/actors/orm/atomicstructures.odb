#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#



#
import luban.content as lc
from luban.content import select, load, alert


from dsaw.model.descriptors import validators

#
from vnfb.dom.AtomicStructure import Structure, Lattice, Atom

from luban.components.Actor import Actor
import luban.orm
base = luban.orm.object2actor(Structure, ActorBase=Actor)
class Actor(base):

    class Inventory(base.Inventory):

        import luban.inventory


    Inventory.short_description.validator = validators.notempty
    Inventory.short_description.default = ''  # default to None will prevent validator from working
    
    def debug(self, director):
        from luban.content.Page import Page
        page = Page(title='title')
        
        document = page.document(title='test', id='maindoc')

	struct = Structure()

        orm = director.clerk.orm
        orm.save(struct)

        self.inventory.id = orm(struct).id
        view = self.edit(director)
        
        document.add(view)
            
        return page


    def _setupORM(self, orm):
        orm.registerObjectTypes([Lattice, Atom])
        return


    def _defaults(self):
        super(Actor, self)._defaults()
        self.inventory.actor_formatter = 'orm/%s'
        return
        

def actor():
    return Actor('orm/atomicstructures')


# version
__id__ = "$Id$"

# End of file 
