#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

from vinil.utils.const import PARSERS

from luban.content import select
from luban.content.Paragraph import Paragraph
from luban.content.Document import Document
from luban.content.HtmlDocument import HtmlDocument
from luban.content import load
from luban.content.Link import Link
from luban.content.Splitter import Splitter
from luban.content.FormSelectorField import FormSelectorField
from luban.content.FormRadioBox import FormRadioBox
from luban.content.Form import Form
from luban.content.Tabs import Tabs
from luban.content.Button import Button

from vinil.components.Actor import Actor as base

# Requires simulation id,
class Actor(base):

    class Inventory(base.Inventory):
        import pyre.inventory
        id          = pyre.inventory.str('id', default='')          # Simulation Id
        configid    = pyre.inventory.str('configid', default='')    # Configuration Id
        type        = pyre.inventory.str('type', default='')        # Type of the configuration file


    def content(self, director):
        self._input = director.clerk.getConfigurations(id=self.configid)

        document = Document(title='Delete Configuration: %s' % self.type)
        document.add(Paragraph(text="Are you sure you want to delete the configuration input?"))

        form        = Form(id="form-vinil")
        submit      = form.submitbutton(label="Delete")
        form.onsubmit   = select(element=form).submit(actor = 'espresso/input-delete',
                                                      routine = 'deleteRecord',
                                                      id=self.id,
                                                      configid=self.configid)

        # TODO: "Cancel" button looks UGLY
        cancel      = Button(label="Cancel")
        cancel.onclick = load(actor = 'espresso/sim-view', routine = 'link', id=self.id)
        form.add(cancel)

        document.add(form)

        return document


    def deleteRecord(self, director):
        """Delete configuration record"""
        self._input     = director.clerk.getConfigurations(id=self.configid)
        self._input.setDirector(director)
        self._input.deleteRecord()

        return load(actor='espresso/sim-view', routine='link', id=self.id)


    def pathlist(self, director):
        sim     = director.clerk.getSimulations(id=self.id)
        self.pathlist = [("Home","greet","link"),
                         ("Simulations", "simulations", "link"),
                         ("Quantum Espresso", "espresso/index", "link"),
                         (sim.sname, "espresso/sim-view", "link", self.id),
                         ("Delete Configuration: %s" % self.type, None, None)]

        return self.pathlist

    def __init__(self, *args, **kwds):
        super(Actor, self).__init__(*args, **kwds)

        return


    def _configure(self):
        super(Actor, self)._configure()
        self.id             = self.inventory.id
        self.configid       = self.inventory.configid
        self.type           = self.inventory.type

    def _init(self):
        super(Actor, self)._init()
        return

def actor():
    return Actor('espresso/input-delete')


__date__ = "$Nov 9, 2009 7:08:53 PM$"


