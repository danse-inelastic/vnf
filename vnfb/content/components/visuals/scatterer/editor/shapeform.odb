#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from luban.content import load, select, alert
import luban.content as lc


class Factory(object):

    shape_view_id = 'scatterer-shape-view'


    def __init__(self, id, director):
        self.id = id
        self.director = director
        self.domaccess = director.retrieveDOMAccessor('scatterer')
        self.record = self.domaccess.getRecord(id)
        return


    def __call__(self, typename):
        doc = lc.document(Class='container', id='scatterer-shape-form')

        # type
        from vnfb.dom.geometry import importShapeType
        type = importShapeType(typename)

        # drawer
        director = self.director
        painter = director.painter
        drawer = painter.paintObj.drawers.getDrawer(type)

        # form
        obj = type(); orm=self.domaccess.orm; orm(obj)
        view = drawer.createPropertiesForm(obj); doc.add(view)
        form = view.getDescendentByName('properties-form')
        # this action will return the unique identifier of new shape
        # , see orm/<shape>._postStoringUserInputs
        original_submit_action = form.onsubmit
        form.onsubmit = load(actor='scatterer/editor', routine='setShape',
                             id=self.id, shape= original_submit_action)

        return doc
            
    
def visual(id, director, typename):
    return Factory(id, director)(typename)


# version
__id__ = "$Id$"

# End of file 

