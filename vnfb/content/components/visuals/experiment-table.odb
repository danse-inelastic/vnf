#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                  Jiao Lin
#                     California Institute of Technology
#                       (C) 2009  All Rights Reserved
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


def visual(experiments, cols, director):
    try: return table(experiments, cols, director)
    except:
        import journal
        debug = journal.debug('experiment-table')
        import traceback
        debug.log(traceback.format_exc())
        return


def table(experiments, cols, director):
    from luban.content.table import Model, View, Table
    from luban.content import load
    from luban.content.Link import Link
    
    class model(Model):

        id = Model.descriptors.link(name='id')
        description = Model.descriptors.str(name='description')

        row_identifiers = ['id']

    columns = [
        View.Column(name='col0',label='ID', measure='id'),
        View.Column(name='col1',label='Description', measure='description', editable=True),
        ]
    columns = filter(lambda col: col.measure in cols, columns)

    view = View(columns=columns, editable=True)
    
    def getId(experiment):
        label = experiment.id
        link = Link(
            label = label,
            onclick = load(
                actor='experiment', routine='showExperimentView',
                id = experiment.id,
                type = experiment.__class__.name,
                )
            )
        return link
    def getDescription(experiment):
        return experiment.short_description
        
    import operator
    for col in view.columns:
        measure = col.measure
        
    value_generators = [
        eval('get'+col.measure[0].upper()+col.measure[1:])
        for col in view.columns]
    record2tuple = lambda record: [g(record) for g in value_generators]
    data = map(record2tuple, experiments)

    table = Table(model=model, data=data, view=view, id='experiment-table')

    return table


# version
__id__ = "$Id$"

# End of file 
