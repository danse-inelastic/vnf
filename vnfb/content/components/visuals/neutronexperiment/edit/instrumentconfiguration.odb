# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2010  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from luban.content import load, select, alert
import luban.content as lc

from luban.content.FormSelectorField import FormSelectorField


class Factory(object):


    def __init__(self, id, director):
        domaccess = director.retrieveDOMAccessor('experiment')
        self.domaccess = domaccess
        self.director = director
        self.id = id
        self.experiment = domaccess.getExperimentRecord(id)
        instrument = self.experiment.instrument
        self.instrument = instrument.dereference(domaccess.db)
        return
    

    def __call__(self):
        #
        domaccess = self.domaccess
        orm = domaccess.orm
        
        # check if configuration exists
        experiment = self.experiment
        ic = experiment.instrument_configuration
        ic = ic and ic.id and ic.dereference(orm.db)
        if not ic:
            ic = domaccess.createInstrumentConfiguration(experiment)
        else:
            ic = orm.record2object(ic)
            
        # the form
        doc = lc.document(Class='container')
        doc.add(self._buildForm(ic))
        #
        if orm.record2object(self.instrument).hasSampleComponent():
            nexttab = 'experimentwizard-sampleconfiguration-tab'
        else:
            nexttab = 'experimentwizard-summary-tab'
        switch = select(id=nexttab).tab('select')
        continuebutton = lc.button(label='continue', onclick=switch)
        doc.add(continuebutton)
        return doc


    def _buildForm(self, ic):
        #
        doc = lc.document()
        #
        director = self.director
        getDrawer = director.painter.paintObj.drawers.getDrawer
        for c in ic.components:
            drawer = getDrawer(c.__class__)
            doc1 = drawer(c)
            doc.add(doc1)
            continue
        
        return doc   



def visual(id=None, director=None):
    '''
    id: experiment id
    instrument: instrument id (not configuration)
    '''
    return Factory(id, director)()

# version
__id__ = "$Id$"

# End of file 
