#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

import luban.content as lc
from vnfb.utils.qegrid import QEGrid

from luban.content import load, select

def visual(director):
    doc         = lc.document(title   = "Create New Simulation")
    splitter    = doc.splitter(orientation="vertical")
    sA          = splitter.section()
    sA.add(viewIndicator(director))

    sB          = splitter.section()
    
    table       = QEGrid(lc.grid(Class="qe-table"))
    sB.add(table.grid())
    showSimulations(table)

    table.setColumnStyle(0, "qe-cell-param")
    return doc


def showSimulations(table):
    """
    Shows simulation packages as "Package Name":"Description" table
    """
    packages   = []
    packages.append((lc.link(label="BvK", onclick=load(actor="material_simulations/bvk/editor")),
                    ""))
    packages.append((lc.link(label="MCViNE", onclick=load(actor="materialsimulation")),
                    ""))
    packages.append((lc.link(label="VASP", onclick=load(actor="material_simulations/vasp-rawinput")),
                    ""))
    packages.append((lc.link(label="GULP", onclick=load(actor="material_simulations/gulpsimulation", routine='new')),
                    ""))
    packages.append((lc.link(label="Quantum Espresso", onclick=load(actor="material_simulations/espresso/sim-create")),
                    "Open source package for electronic-structure calculations and materials modeling using density-functional theory, plane waves, and pseudopotentials"))

    for p in packages:
        table.addRow((p[0], p[1]))


def viewIndicator(director):
    path = []
    path.append(('Simulations ', load(actor='materialsimulation')))
    path.append('Create New Simulation')
    
    return director.retrieveVisual('view-indicator', path=path)



__date__ = "$Nov 20, 2009 3:11:39 PM$"


