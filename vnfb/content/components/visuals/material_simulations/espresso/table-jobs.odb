#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from vnfb.qeutils.qeutils import stamp2date
from vnfb.qeutils.results.resultinfo import ResultInfo
from vnfb.qeutils.qegrid import QEGrid
from luban.content import load
import luban.content as lc


def getTaskId(director, simid, linkorder): #, type
    "Get task id "
    from vnfb.qeutils.qerecords import SimulationRecord
    simrecord   = SimulationRecord(director, simid)

    if not simrecord:
        return ""

    task    = simrecord.task(linkorder)
    if not task:
        return ""

    return task.id

# XXX: Bug in check and results display
def visual(director, simid, type, jobs, linkorder):
    """
    Returns the table of jobs related to QE task
    """

    table   = QEGrid(lc.grid(Class="qe-tasks-table"))
    taskid  = getTaskId(director, simid, type)

    def jobid(job):
        return  lc.link(label   = job.id,
                       onclick = load(actor     = 'jobs/jobs-view',
                                      id        = simid,
                                      taskid    = taskid,
                                      jobid     = job.id,
                                      type      = type)
                        )

    def submitted(job):
        return stamp2date(job.timesubmitted)

    def status(job):
        return job.status

    def results(job):
        results = ResultInfo(director, simid, linkorder, job) # XXX
        return results.link()

    def check(job):
        results = ResultInfo(director, simid, linkorder, job) # XXX
        return results.action()

    def delete(job):
        return lc.link( label   = "Delete",
                        Class   = "qe-action-delete",
                        onclick = load(actor        = 'jobs/delete',
                                         id         = simid,
                                         jobid      = job.id,
                                         taskid     = taskid,   
                                         type       = type)
                       )

    if len(jobs):
        table.addRow(("Id", "Time Submitted", "Status", "Results", "", ""))
        for j in jobs:
            table.addRow((jobid(j), submitted(j), status(j), results(j), check(j), delete(j)))

    table.setColumnStyle(0, "qe-table-id")
    table.setColumnStyle(1, "qe-table-time")
    table.setColumnStyle(4, "qe-table-check")
    table.setColumnStyle(5, "qe-table-delete")
    table.setRowStyle(0, "qe-table-header")

    return table.grid()
    

__date__ = "$Jan 14, 2010 6:09:10 AM$"



# **************** DEAD CODE *****************

#    try: return table(jobs, cols, tinfo, director)
#    except:
#        import journal
#        debug = journal.debug('qe-task-jobs-table')
#        import traceback
#        debug.log(traceback.format_exc())
#        return

