#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                  Jiao Lin
#                     California Institute of Technology
#                     (C) 2006-2010  All Rights Reserved
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


'''
This implementation needs improvements.
It assumes that there is a symbolic link in html/ named "tmp" pointing
to the directory content/data/tmp
'''

import os, tempfile, histogram.hdf as hh


# path of tmp directory in the http url
http_tmproot = 'tmp'

# path to the tmp directory in the file system
tmproot = os.path.join('..', 'content', 'data', 'tmp')


def visual(id, director):
    """
    id: id of the histogram record I(x,y)
    """
    # path to the histogram data file
    from vnfb.dom.Histogram import HistogramTable
    h = HistogramTable(); h.id = id
    histrecordpath = director.dds.abspath(h)
    histpath = os.path.join(histrecordpath, 'data.h5')

    # matplotlib needs home to be writable
    os.environ['HOME'] = '/tmp'

    # find the temporary directory to write the png file
    tmpdirectory = tempfile.mkdtemp(dir=tmproot)
    if not os.path.exists(tmpdirectory): os.makedirs(tmpdirectory)

    subdir = os.path.split(tmpdirectory)[1]

    # png filename
    filename = 'plot.png'
    filepath = os.path.join(tmpdirectory, filename)

    # the command to launch
    cmd = 'PlotHist.py %s --output=%s' % (histpath, filepath)

    # launch
    from vnfb.utils.spawn import spawn
    fail, output, error = spawn(cmd)

    if fail:
        raise RuntimeError, 'out=%s, err=%s' % (output, error)

    # the url for the image
    pngurl = os.path.join(http_tmproot, subdir, filename)

    #
    import luban.content as lc
    doc = lc.htmldocument()
    doc.text = [
        '<img src="%s" />' % pngurl
        ]
    return doc



# version
__id__ = "$Id$"

# End of file 
