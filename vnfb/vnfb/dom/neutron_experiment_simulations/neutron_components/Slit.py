# -*- Python -*-
# auto-generated by mcstas-component-to-dom
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2010  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
from AbstractNeutronComponent import AbstractNeutronComponent as base
class Slit(base):
    abstract = False
    x_min = 0.0
    x_max = 0.0
    y_min = 0.0
    y_max = 0.0
    radius = 0.0
    cut = 0.0
    width = 0.0
    height = 0.0
    def customizeLubanObjectDrawer(self, drawer):
        drawer.mold.sequence = ['componentname', 'short_description', 'referencename', 'position', 'orientation', 'x_min', 'x_max', 'y_min', 'y_max', 'radius', 'cut', 'width', 'height']
InvBase=base.Inventory
class Inventory(InvBase):
    x_min = InvBase.d.float(name='x_min', default=0.0)
    x_min.help = 'Lower x bound (m)'
    x_max = InvBase.d.float(name='x_max', default=0.0)
    x_max.help = 'Upper x bound (m)'
    y_min = InvBase.d.float(name='y_min', default=0.0)
    y_min.help = 'Lower y bound (m)'
    y_max = InvBase.d.float(name='y_max', default=0.0)
    y_max.help = 'Upper y bound (m)'
    radius = InvBase.d.float(name='radius', default=0.0)
    radius.help = 'Radius of slit in the z=0 plane, centered at Origo (m)'
    cut = InvBase.d.float(name='cut', default=0.0)
    cut.help = 'Lower limit for allowed weight (1)'
    width = InvBase.d.float(name='width', default=0.0)
    width.help = ''
    height = InvBase.d.float(name='height', default=0.0)
    height.help = ''
    dbtablename = 'slits'
Slit.Inventory = Inventory
del Inventory
from _ import o2t, NeutronComponentTableBase
SlitTable = o2t(Slit, {'subclassFrom': NeutronComponentTableBase})
# version
__id__ = "$Id$"

# End of file 
