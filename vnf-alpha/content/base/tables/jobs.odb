#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                  Jiao Lin
#                     California Institute of Technology
#                       (C) 2009  All Rights Reserved
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from vnf.components.Actor import action_link, actionRequireAuthentication


def table(jobs, director):
    from vnf.content.table import Model, View, Table
    class model(Model):

        id = Model.Measure(name='id', type='text')
        computation = Model.Measure(name='computation', type='text')
        owner = Model.Measure(name='owner', type='text')
        server = Model.Measure(name='server', type='text')
        #processors
        status = Model.Measure(name='status', type='text')
        time_start = Model.Measure(name='time_start', type='text')
        #time_complete

    def getID(job):
        id = job.id
        action = actionRequireAuthentication(
            sentry = director.sentry,
            label = id,
            actor = 'job',
            routine = 'view',
            id = job.id,
            )
        link = action_link(action, director.cgihome)
        return link
    def getComputation(job):
        computation = job.computation
        if nullpointer(computation): return 'not defined'
        try:
            computation = director.clerk.dereference(computation)
        except:
            return 'Broken reference: computation %s' % computation.id
        identifier = computation.short_description or computation.id
        action = actionRequireAuthentication(
            sentry = director.sentry,
            label = identifier,
            actor = 'computation',
            routine = 'view',
            id = computation.id,
            type = computation.__class__.__name__.lower(),
            )
        link = action_link(action, director.cgihome)
        return '%s: %s' % (computation.__class__.__name__, link)
    def getServer(job):
        server = job.server
        if not server: return 'not defined'
        server = director.clerk.dereference(server)
        label = server.short_description or server.id
        return label
    import operator
    generators = {
        'id': getID,
        'computation': getComputation,
        'owner': operator.attrgetter('creator'),
        'server': getServer,
        'status': operator.attrgetter('state'),
        'time_start': operator.attrgetter('time_start'),
        }
    
    class D: pass
    def d(s):
        r = D()
        for attr, g in generators.iteritems():
            value = g(s)
            setattr(r, attr, value)
            continue
        return r
    data = [d(j) for j in jobs]

    class view(View):
        
        columns = [
            View.Column(id='col1',label='ID', measure='id'),
            View.Column(id='col2',label='Computation', measure='computation'),
            #View.Column(id='col3',label='Owner', measure='owner'),
            View.Column(id='col4',label='Server', measure='server'),
            View.Column(id='col5',label='Status', measure='status'),
            View.Column(id='col6',label='Time started', measure='time_start'),
            ]

        editable = False

    table = Table(model, data, view)

    from pyre.components.Component import Component
    c = Component('table', 'table')
    c.table = table
    return c


from vnf.components.misc import nullpointer

# version
__id__ = "$Id$"

# End of file 
