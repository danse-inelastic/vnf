#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                  Jiao Lin
#                     California Institute of Technology
#                       (C) 2009  All Rights Reserved
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from vnf.components.Actor import action_link, actionRequireAuthentication

def table(experiments, director):
    from vnf.content.table import Model, View, Table
    class model(Model):

        id = Model.Measure(name='id', type='text')
        creationDate = Model.Measure(name='creationDate', type='text')
        description = Model.Measure(name='description', type='text')
        sample = Model.Measure(name='sample', type='text')
        instrument = Model.Measure(name='instrument', type='text')
        status = Model.Measure(name='status', type='text')


    def getID(exp):
        label = exp.id
        action = actionRequireAuthentication(
            sentry = director.sentry,
            label = label,
            actor = 'neutronexperiment',
            routine = 'view',
            id = exp.id,
            )
        return action_link(action, director.cgihome)
    def getDesc(exp):
        label = exp.short_description or exp.id
        return label
    def getCreationDate(exp):
        date = exp.date
        return date
    def getSample(exp):
        from vnf.components.NeutronExperimentWizard import _get_sample_from_experiment
        try:
            sample = _get_sample_from_experiment(exp, director.clerk.db)
        except:
            # sample not defined correctly
            import traceback
            tb = traceback.format_exc()
            raise RuntimeError, "Experiment #%s: sample not defined correctly.\n%s" % (exp.id, tb)
        
        if not sample: return 'not defined'
        label = sample.short_description or sample.id
        return label
    def getInstrument(exp):
        instrument_ref = exp.instrument
        if not instrument_ref: return "not defined"
        instrument = director.clerk.dereference(instrument_ref)
        label = instrument.short_description
        action = actionRequireAuthentication(
            sentry = director.sentry,
            label = label,
            actor = 'instrument',
            routine = 'show',
            id = instrument.id,
            )
        link = action_link(action, director.cgihome)
        return link
        
    import operator
    generators = {
        'id': getID,
        'description': getDesc,
        'sample': getSample,
        'instrument': getInstrument,
        'creationDate': getCreationDate,
        'status': operator.attrgetter('status'),
        }
    
    class D: pass
    def d(s):
        r = D()
        for attr, g in generators.iteritems():
            value = g(s)
            setattr(r, attr, value)
            continue
        return r
    data = [d(e) for e in experiments]

    class view(View):
        
        columns = [
            View.Column(id='col1',label='ID', measure='id'),
            View.Column(id='col2',label='Description', measure='description'),
            View.Column(id='col3',label='Sample', measure='sample'),
            View.Column(id='col4',label='Instrument', measure='instrument'),
            View.Column(id='col5',label='Status', measure='status'),
            View.Column(id='col6',label='Date created', measure='creationDate'),
            ]

        editable = False

    table = Table(model, data, view)

    from pyre.components.Component import Component
    c = Component('table', 'table')
    c.table = table
    return c


# version
__id__ = "$Id$"

# End of file 
