#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                  Jiao Lin
#                     California Institute of Technology
#                       (C) 2007  All Rights Reserved
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from vnf.components.Actor import action_link, actionRequireAuthentication


from vnf.components.DBObjectForm import DBObjectForm as base
class Form(base):


    class Inventory(base.Inventory):

        import pyre.inventory

        ncount = pyre.inventory.float( 'ncount', default = 1e6 )
        ncount.meta['tip'] = 'number of neutrons'

        pass # end of Inventory


    parameters = ['ncount']
    DBTable = 'NeutronExperiment'


    def __init__(self, name = None):
        if name is None:
            name = 'block'

        base.__init__(self, name)

        return


    def legend(self):
        return 'Run neutron experiment:'


    def expand(self, form):
        '''expand an existing form with fields from this component'''

        director = self.director
        record = self.getRecord()

        instrument_id = record.instrument_id
        configured = director.clerk.getConfiguredInstrument( instrument_id )
        
        p = form.paragraph()
        edit_link = action_link(
            actionRequireAuthentication(
            'instrument',
            director.sentry,
            label = configured.short_description,
            routine = 'edit',
            id = configured.id,
            ),  director.cgihome
            )
        change_link = action_link(
            actionRequireAuthentication(
            'neutronexperiment',
            director.sentry,
            label = 'this link',
            routine = 'selectinstrument',
            id = record.id,
            ),  director.cgihome
            )
        p.text = [
            'Instrument: %s. ' % edit_link,
            'You could change the neutron instrument by clicking %s.' % (
            change_link,),
            ]

        sampleassembly_id = record.sampleassembly_id
        sampleassembly = director.clerk.getSampleAssembly( sampleassembly_id )
        
        p = form.paragraph()
        link = action_link(
            actionRequireAuthentication(
            'sampleassembly',
            director.sentry,
            label = sampleassembly.short_description,
            routine = 'edit',
            id = sampleassembly.id,
            ),  director.cgihome
            )
        p.text = [
            'Sample assembly: %s' % link,
            ]

        base.expand(self, form)
        
        return form


    def processUserInputs(self):

        base.processUserInputs( self )
        
        record = self.getRecord()
        director = self.director
        experiment = director.clerk.getHierarchy( record )

        #create a new job
        from vnf.components.Job import new_job, jobpath
        job = new_job( director )
        
        job.jobName = experiment.short_description
        director.clerk.updateRecord( job )
        
        jobdir = jobpath( job.id )
        
        build_run( experiment, path = jobdir )

        return job


    pass # end of Form


def build_run( experiment, path ):
    from vnf.components.NeutronExperimentSimulationRunBuilder import Builder
    return Builder(path).render(experiment)


def form(): return Form( 'run_neutron_experiment' )


# version
__id__ = "$Id$"

# End of file 
