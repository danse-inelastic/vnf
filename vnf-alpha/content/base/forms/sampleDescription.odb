# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                        (C) 2007  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from vnf.components.Form import Form as base, InputProcessingError
from vnf.components.Actor import action_link, actionRequireAuthentication
from vnf.components.DBObjectForm import formactor_action_prefix

class Form( base ):

    class Inventory( base.Inventory ):
        import pyre.inventory
        
#        sampleId = pyre.inventory.str("sampleId", default='')
#        sampleId.meta['tip'] = "the unique identifier for a given sample"
        
        short_description = pyre.inventory.str(
            'short_description', default = 'sample description' )

    def expand(self, form, errors = None, advanced = False, id = ''):
        '''expand an existing form with fields from this component'''
        prefix = formactor_action_prefix
        director = self.director        
        
        if not id: # create a new one if none passed
            tableClass = director.clerk._getTable('sample')
            record = director.clerk.newObject(tableClass)
        else: # or use the old
            record = director.clerk.getRecordByID('samples', id)
            
        self.inventory.sampleId = record.id

        self.short_description = form.text(
            id='text1', name='%s.short_description'%prefix,
            label='Sample Description', value = record.short_description)
        
#        experiment_id_field = form.hidden(
#            name = '%s.experiment_id' % prefix,
#            value = self.inventory.experiment_id )

    def processUserInputs(self):
        'process user inputs and save them to db'
        return self.inventory.short_description



def form(): return Form('sampleDescription')


# version
__id__ = "$Id$"

# End of file 
