#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2007-2008  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#



from vnf.components.FormActor import FormActor as base, action, action_link, InputProcessingError


class Actor(base):
    
    class Inventory(base.Inventory):

        import pyre.inventory
        id = pyre.inventory.str( 'id', default = '')
        id.meta['tip'] = 'id of reduction session'


    def edit(self, director, errors=None, id=None):
        if id is None: id = self.inventory.id
        if not id:
            from vnf.dom.tutorials.SinIQModel import SinIQModel
            model = director.clerk.newOwnedObject(SinIQModel)
            self.inventory.id = id = model.id

        page = director.retrievePage( 'tutorial1' )
        
        main = page._body._content._main

        document = main.document( title = 'Edit I(Q) model' )

        formcomponent = self.retrieveFormToShow( 'siniqmodel' )
        formcomponent.inventory.id = id
        formcomponent.director = director

        form = document.form(
            name='siniqmodel',
            legend = formcomponent.legend(),
            action=director.cgihome)

        # specify action when the form is submitted
        theaction = action(
            actor = 'siniqmodel1', sentry = director.sentry,
            label = '', routine = 'verify',
            id = id,
            arguments = {'form-received': formcomponent.name },
            )
        from vnf.weaver import action_formfields
        action_formfields( theaction, form )

        # expand the form with fields of the data object that is being edited
        formcomponent.expand(form, errors=errors)

        submit = form.control(name="submit", type="submit", value="Submit")
        
        return page


    def verify(self, director):
        page = director.retrievePage( 'tutorial1' )
        
        try:
            self.processFormInputs( director )
        except InputProcessingError, err:
            errors = err.errors
            self.form_received = None
            director.routine = 'edit'
            return self.edit( director, errors = errors )

        return self.view(director)


    def view(self, director):
        page = director.retrievePage( 'tutorial1' )

        id = self.inventory.id
        model = director.clerk.getRecordByID('siniqmodels', id)
        
        main = page._body._content._main
        document = main.document( title = 'I(Q) model %s' % id )
        
        for prop in ['bg', 'amplitude', 'L', 'phase']:
            p = document.paragraph()
            p.text = [ '%s = %s' % (prop, getattr(model, prop)) ]
            continue
        return page


def actor():
    return Actor('siniqmodel1')


# version
__id__ = "$Id$"

# End of file 
