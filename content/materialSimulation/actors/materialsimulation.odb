#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2007-2008  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

'''
This actor not only deals with material simulation, as its name suggests,
but also deals with material modeling.
'''

from vnf.components.FormActor import FormActor as base, action, actionRequireAuthentication, action_link, InputProcessingError, AuthenticationError


class Actor(base):
    
    class Inventory(base.Inventory):

        import pyre.inventory
        id = pyre.inventory.str( 'id', default = '')


    def default(self, director):
        return self.listall( director )


    def listall(self, director):
        try:
            page = director.retrieveSecurePage( 'materialsimulation' )
        except AuthenticationError, err:
            return err.page

        main = page._body._content._main
        document = main.document(title='Material Simulation/Modeling')

        #
        p = document.paragraph()
        action = actionRequireAuthentication(
            label = 'create',
            actor = 'materialsimulationwizard',
            routine = 'start',
            sentry = director.sentry,
            )
        create = action_link( action, director.cgihome )
        action = actionRequireAuthentication(
            label = 'analyze',
            actor = 'materialanalysis',
            sentry = director.sentry,
            )
        analyze = action_link( action, director.cgihome )
        p.text = [
            'You can %s a simulation/model or scattering kernel for use in a virtual instrument.' % create,
            'You can also %s your sample.' % analyze,
            ]

        where ="creator='%s'" % director.sentry.username
        simulations = getallsimulations(director.clerk.db, where=where)
        if len(simulations):
            p = document.paragraph()
            p.text = [
                'Following are simulations/models you have created:',
                ]
            
            table = director.retrieveComponent(
                'materialsimulations',
                factory="table",
                args=[simulations, director],
                vault=['tables']).table
            
            document.contents.append(table)
            
        return page


def getallsimulations(db, where=None):
    from vnf.dom import materialsimulationtables, materialmodelingtables
    tables = materialsimulationtables() + materialmodelingtables()
    
    computations = []
    for table in tables:
        computations += db.fetchall(table, where=where)
        continue
    return computations


def _desribe(simulation):
    return '%s computation #%s' % (simulation.__class__.__name__, simulation.id)
    

def actor():
    return Actor('materialsimulation')


# version
__id__ = "$Id: Login.py,v 1.1.1.1 2006-11-27 00:09:47 aivazis Exp $"

# End of file 
