# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                      California Institute of Technology
#                        (C) 2007  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from vnf.components.Form import Form as base
from vnf.components.JnlpFile import JnlpFile

class Form( base ):
#    class Inventory( base.Inventory ):
#
#        import pyre.inventory as inv
#        id = inv.str( 'id', default = '' )
#        id.meta['tip'] = 'A short description'
#        
#        short_description = inv.str(
#            'short_description', default = '' )
#        short_description.meta['tip'] = 'A short description'


    def expand(self, form, materialSimulationId = None):
        prefix = formactor_action_prefix
        
        jnlpFile = JnlpFile(resources=('GULP.jar', 'j2ssh.jar', 'commons-logging.jar'),
                            mainClass='javagulp.controller.JavaGULP',
                            programArguments = [materialSimulationId],
                            fileName='gulpLauncher')
        relativeLocationOfFile = jnlpFile.writeJnlp(self.director)
        
        p = form.paragraph()
        p.text = ['''The Gulp simulation package uses classical forcefield
        techniques for simulating larger systems.  Gulp contains a vast
        number of forcefields and phonon / molecular dynamics capabilities
        to produce dynamics necessary for inelastic neutron scattering kernels and 
        to simulate a thermodynamically equilibrated structure which can be used to refine
        diffraction, sans, reflectometry, and engineering diffraction neutron scattering
        measurements.<br>''',
        '<a href="'+relativeLocationOfFile+'"><img src="images/webstart.gif" alt="GulpUI"/></a><br>',
        '''Press "Launch" above to activate the Gulp UI in Java Web Start mode.  Note you must have
        a Java Virtual Machine (JVM) installed somewhere on your computer.  Most OS's will automatically
        use the javaws application within a user's JVM to open the xml descripter (.jnlp file) that will be
        downloaded clientside.''']
        return





formactor_action_prefix = 'actor.form-received' # assumed actor is a form actor


def form(): return Form( 'gulp' )


# version
__id__ = "$Id$"

# End of file 
