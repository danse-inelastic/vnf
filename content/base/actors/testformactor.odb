# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                        (C) 2007  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


# This component is just for testing purpose. try the following commands:
# $ ./main.sh -actor=testformactor -actor.form-received=testform --actor.form-received.energy=10
# $ ./main.sh -actor=testformactor -actor.form-received=testform --help-components --actor.help-components


from vnf.components.FormActor import FormActor as base, action, InputProcessingError


class Test( base ):

    class Inventory( base.Inventory ):

        import pyre.inventory

        pass # end of Inventory


    def __init__(self, name = 'testformactor'):
        base.__init__(self, name)
        return


    def present(self, director, errors=None):
        page = director.retrievePage('greet')
        main = page._body._content._main

        # populate the main column
        document = main.document(title='An actor to test form')
        document.description = ''
        document.byline = 'byline?'
        
        formcomponent = self.retrieveFormToShow(
            'testform' )
        formcomponent.director = director

        # create form
        form = document.form(
            name='testform',
            legend= formcomponent.legend(),
            action=director.cgihome)

        # specify action
        action1 = action(
            label = '', 
            actor = 'testformactor', routine = 'verify',
            arguments = {'form-received': formcomponent.name } )
        from vnf.weaver import action_formfields
        action_formfields( action1, form )

        # expand the form with fields of the data object that is being edited
        formcomponent.expand( form, errors=errors )

        # run button
        submit = form.control(
            name="actor.form-received.submit", type="submit", value="Submit")

        return page


    def verify(self, director):
        form_received = self.form_received
        try:
            inputs = self.processFormInputs(director)
        except InputProcessingError, err:
            errors = err.errors
            return self.present(director, errors=errors)
        
        page = director.retrievePage( 'greet' )
        main = page._body._content._main
        document = main.document(
            title='Title goes here')
        
        p = document.paragraph()
        p.text = ['Your input for energy is: %s' % inputs.energy]
        
        return page
        
        return

    default = verify

    pass # end of Test



def actor():
    return Test( ) 



# version
__id__ = "$Id$"

# End of file 
