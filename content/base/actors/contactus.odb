#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                  Jiao Lin
#                      California Institute of Technology
#                      (C) 2008-2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from vnf.components.FormActor import FormActor as base, action, actionRequireAuthentication, action_link, AuthenticationError


class Actor(base):


    class Inventory(base.Inventory):

        import pyre.inventory

        pass # end of Inventory


    def default(self, director):
        return self.presentform(director)


    def presentform(self, director):
        try:
            page = self._retrievePage(director)
        except AuthenticationError, err:
            return err.page

        main = page._body._content._main
        # populate the main column
        document = main.document(title='Contact vnf developer team')
        document.description = ''

        p = document.paragraph()
        p.text = [
            'Vnf is in alpha-test phase.',
            'Your feedback will be very helpful to us.',
            'Please leave bug reports, your comments, and any suggestions',
            'here so we can improve the vnf service.',
            ]

        formcomponent = self.retrieveFormToShow(
            'contactus' )
        formcomponent.director = director
        
        # create form
        form = document.form(
            name='contactus',
            legend= formcomponent.legend(),
            action=director.cgihome)

        # specify action
        action = actionRequireAuthentication(
            actor = 'contactus', routine = 'verify',
            sentry = director.sentry,
            arguments = {'form-received': formcomponent.name },
            )
        from vnf.weaver import action_formfields
        action_formfields( action, form )

        # expand the form with fields of the data object that is being edited
        formcomponent.expand( form )

        # run button
        submit = form.control(name="actor.form-received.submit", type="submit", value="Submit")

        return page


    def verify(self, director):
        try:
            page = self._retrievePage(director)
        except AuthenticationError, err:
            return err.page

        comments = self.processFormInputs( director )
        self._emailComments(comments, director)

        return self.acknowledge(director)


    def acknowledge(self, director):
        try:
            page = self._retrievePage(director)
        except AuthenticationError, err:
            return err.page

        main = page._body._content._main
        # populate the main column
        document = main.document(title='Thank you')
        document.description = ''

        p = document.paragraph()
        p.text = [
            'Thank you for your comments.',
            ]
        return page


    def __init__(self, name=None):
        if name is None:
            name = "contactus"
        super(Actor, self).__init__(name)
        return


    def _retrievePage(self, director):
        page = 'contactus'
        return director.retrieveSecurePage(page)


    def _emailComments(self, comments, director):
        from vnf.components.misc import announce
        announcement = 'user-comments'
        username = director.sentry.username
        user = director.clerk.getUser(username)
        announce(director, announcement, user, comments)
        return


    def _configure(self):
        base._configure(self)
        return


    pass # end of Actor



def actor():
    return Actor()


# version
__id__ = "$Id$"

# End of file 
