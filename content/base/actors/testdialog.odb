#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                  Jiao Lin
#                     California Institute of Technology
#                       (C) 2007  All Rights Reserved
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from vnf.components.FormActor import FormActor as base, action, actionRequireAuthentication, action_link


class Actor(base):


    class Inventory(base.Inventory):

        import pyre.inventory

        pass # end of Inventory


    def default(self, director):
        return self.simple(director)
    
    
    def simple(self, director):
        page = director.retrievePage('greet')
        main = page._body._content._main

        document = main.document( title = 'Test' )

        import vnf.content
        dialog = vnf.content.dialog("test")
        document.add(dialog)

        p = dialog.paragraph()
        p.text = [
            'This is a dialog.'
            ]

        openbuttonid = '12345'
        p = document.paragraph(id=openbuttonid)
        p.text = ['open dialog']

        snippet = vnf.content.jssnippet()
        snippet.main = [
            '$("#%s").click( function() {' % openbuttonid,
            '  $("#%s").dialog("open");' % id(dialog),
            '});',
            ]
        document.add(snippet)
        return page


    def simple(self, director):
        page = director.retrievePage('greet')
        main = page._body._content._main

        document = main.document( title = 'Test' )

        import vnf.content
        dialog = vnf.content.dialog("test")
        document.add(dialog)

        p = dialog.paragraph()
        p.text = [
            'This is a dialog.'
            ]

        openbuttonid = '12345'
        p = document.paragraph(id=openbuttonid)
        p.text = ['open dialog']

        snippet = vnf.content.jssnippet()
        snippet.main = [
            '$("#%s").click( function() {' % openbuttonid,
            '  $("#%s").dialog("open");' % id(dialog),
            '});',
            ]
        document.add(snippet)
        return page


    def form(self, director):
        page = director.retrievePage('greet')
        main = page._body._content._main

        document = main.document(title='Test')

        # dialog
        dialog = self._create_dialog(document, director)
        dialogid = id(dialog)
        
        # the button to launch the dialog
        openbuttonid = '12345'
        p = document.paragraph(id=openbuttonid)
        p.text = ['open dialog']

        # codes to connect events
        import vnf.content
        snippet = vnf.content.jssnippet()
        snippet.includes = [
            'jquery/ajaxUtils.js',
            ]
        showUserInputFunc = '''
        var showUserInputFunc = function (data, textStatus) {
          $("#%s").dialog("close");
          alert("Your input: " + data.parameter1);
        };
        ''' % dialogid
        snippet.main = [
            showUserInputFunc,
            '$("#%s form").submitWithAjax({callback: showUserInputFunc, responsetype: "json"});' % dialogid,
            '$("#%s").click( function() {' % openbuttonid,
            '  $("#%s").dialog("open");' % dialogid,
            '});',
            ]
        document.add(snippet)
        return page


    def process_testform(self, director):

        form_received = self.form_received
        parameter1 = form_received.processUserInputs()

        # the returned object is a json text string
        d = {'parameter1': parameter1}
        import cjson
        s = cjson.encode(d)

        #
        self._debug.log('json output: %s' % s)
        return s


    def _create_dialog(self, document, director):
        import vnf.content
        dialog = vnf.content.dialog("test"); dialogid = id(dialog)
        document.add(dialog)

        p = dialog.paragraph()
        p.text = [
            'This is a dialog.'
            ]

        #
        formcomponent = self.retrieveFormToShow( 'testform' )
        formcomponent.director = director
        
        # create form
        formid = id(formcomponent)
        form = dialog.form(
            name='testform',
            id = formid,
            legend= formcomponent.legend(),
            action=director.cgihome)

        # specify action
        theaction = action(
            actor = 'testdialog',
            label = '', routine = 'process_testform',
            arguments = {'form-received': formcomponent.name } )
        from vnf.weaver import action_formfields
        action_formfields( theaction, form )

        # expand the form with fields of the data object that is being edited
        formcomponent.expand( form )

        # run button
        submit = form.control(name="submit", type="submit", value="Run")
        return dialog
    

    def __init__(self, name=None):
        if name is None:
            name = "testdialog"
        super(Actor, self).__init__(name)
        return


    def _configure(self):
        base._configure(self)
        return


    pass # end of Actor


def actor(): return Actor()


# version
__id__ = "$Id$"

# End of file 
