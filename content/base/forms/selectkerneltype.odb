# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                        (C) 2007  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from vnf.components.Form import Form as base
from vnf.components.Actor import action_link, actionRequireAuthentication


class Form( base ):

    class Inventory( base.Inventory ):
        import pyre.inventory
        type = pyre.inventory.str( 'type' )
        pass # end of Inventory


    def legend(self):
        'return a legend string'
        return 'Select a kernel type'


    def expand(self, form):
        '''expand an existing form with fields from this component'''

        director = self.director

        p = form.paragraph()
        p.text = [
            'Many scattering kernel types exist.',
            'Please select from the following list:'
            ]

        prefix = formactor_action_prefix

        from vnf.dom import kerneltables
        types = kerneltables()
        
        entries = [(t.__name__, t.__name__) for t in types ]
        
        import opal.content
        selector = form.selector(
            id = 'kerneltype_selector',
            name = '%s.type' % prefix,
            entries = entries,
            label = 'Kernel',
            selected = entries[0][0],
            )
        return


    def processUserInputs(self):
        'process user inputs and save them to db'

        return self.inventory.type


    def __init__(self, name = None):
        if name is None:
            name = 'selectkerneltype'

        base.__init__(self, name)

        return
    
    pass # end of Form




formactor_action_prefix = 'actor.form-received' # assumed actor is a form actor


def form(): return Form()


# version
__id__ = "$Id$"

# End of file 
