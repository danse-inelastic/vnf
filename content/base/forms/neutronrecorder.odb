# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                        (C) 2007  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#



from vnf.forms.DBObjectForm import DBObjectForm as base, InputProcessingError


class NeutronRecorder(base):


    class Inventory(base.Inventory):

        import pyre.inventory
        
        packetsize = pyre.inventory.str( name = 'packetsize', default = 10000 )
        packetsize.meta['label'] = 'Size of neutron packet'
        packetsize.meta['tiponerror'] = (
            'Please enter a positive integer',
            )

    parameters = [#'short_description',
        'packetsize',
        ]
    
    DBTable = 'neutronrecorders'


    def __init__(self, name = None):
        if name is None:
            name = 'neutronrecorder'

        base.__init__(self, name)
        return


    def processUserInputs(self, *args, **kwds):

        errors = filter(
            lambda param: bad(param, getattr(self.inventory, param)),
            self.parameters)
        
        if len(errors): raise InputProcessingError, errors
        
        return base.processUserInputs(self, *args, **kwds)




def bad(key, value):
    if key in ['packetsize']: return not positiveinteger(value)
    raise ValueError


def positiveinteger(value):
    try:
        value = int(value)
    except:
        return False
    return value > 0


def form(): return NeutronRecorder()


# version
__id__ = "$Id$"

# End of file 
