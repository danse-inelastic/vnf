# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                        (C) 2007  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from vnf.components.Form import Form as base


class Form( base ):

    class Inventory( base.Inventory ):

        import pyre.inventory as inv
        sampleShape = inv.str('sampleShape',default='plate')
        sampleShape.validator=inv.choice(['plate', 'cylinder'])
        
    routines={'cylinder':'inputCylinder','plate':'inputPlate'}

    def expand(self, form):
        '''expand an existing form with fields from this component'''
        
        p = form.paragraph()
        p.text=['Select sample shape']
        name = '%s.%s' % (formactor_action_prefix, 'sampleShape')
#        box=form.box()
#        plate=box.radio(id='radio1',name=name, label = "Plate", value = 'plate')       
#        cylinder=box.radio(id='radio2',name=name, label = "Cylinder", value = 'cylinder') 
        plate=form.radio(id='radio1',name=name, label = "Plate", value = 'plate')       
        cylinder=form.radio(id='radio2',name=name, label = "Cylinder", value = 'cylinder') 
        
        
        p = form.paragraph()
        p.text = ['To begin the creation of a scattering kernel, select an energetics/dynamics engine or a set of phonon dispersions.']
        prefix = formactor_action_prefix

    def processUserInputs(self):
        'process user input '
        return self.routines[self.inventory.sampleShape]


#formactor_action_prefix = 'actor.form-received' # assumed actor is a form actor
from vnf.components.DBObjectForm import formactor_action_prefix

def form(): return Form( 'selectShape' )


# version
__id__ = "$Id$"

# End of file 
