# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                        (C) 2007  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from vnf.components.Form import Form as base, InputProcessingError
from vnf.components.Actor import action_link, actionRequireAuthentication


class Form( base ):

    class Inventory( base.Inventory ):
        import pyre.inventory
        selected = pyre.inventory.str( 'selected', default = '' )
        pass # end of Inventory


    def legend(self):
        'return a legend string'
        return 'Select a sample'


    def expand(self, form):
        prefix = formactor_action_prefix

        p = form.paragraph()
        p.text = [
            'Please select from the following list of sample examples:',
            ]

        director = self.director
        examples = self._getExamples(director)

        # temp hack
        # get all samples and scatterers
        clerk = director.clerk
        where = "creator='vnf' or creator='%s'" % director.sentry.username
        samples = clerk.indexSamples(where=where).values()
        scatterers = clerk.indexScatterers(where=where).values()

        all = examples + samples + scatterers

        # make a unique list
        from vnf.utils.uniquelist import uniquelist
        from vnf.dom.hash import hash
        samples = uniquelist(all, idfun=lambda sample: hash(sample, clerk.db))

        director = self.director
        options = {
            'selected': samples[0],
            'showkernels': 1,
            }
        table = director.retrieveComponent(
            'samples', factory="table", args=[samples, director, options],
            vault=['tables']).table
        form.contents.append(table)
        
        return


    def processUserInputs(self):
        'process user inputs and save them to db'

        director = self.director
        clerk = director.clerk

        return self.inventory.selected


    def _getExamples(self, director):
        # find all existing examples
        from vnf.dom.ScattererExample import ScattererExample
        scattererexamples = director.clerk.db.fetchall( ScattererExample, where = None )
        scatterers = [ director.clerk.dereference(ex.scatterer) for ex in scattererexamples ]
        
        from vnf.dom.neutron_components.SampleComponentExample import SampleComponentExample
        scexamples = director.clerk.db.fetchall(SampleComponentExample, where = None)
        samplecomponents = [director.clerk.dereference(ex.samplecomponent) for ex in scexamples]
        return scatterers + samplecomponents
    

    def __init__(self, name = None):
        if name is None:
            name = 'select_sample_from_examples'

        base.__init__(self, name)
        return
    
    pass # end of Form



formactor_action_prefix = 'actor.form-received' # assumed actor is a form actor
from vnf.components.misc import empty_id


def form(): return Form()


# version
__id__ = "$Id$"

# End of file 
