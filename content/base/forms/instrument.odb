# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                        (C) 2007  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#



from vnf.components.DBObjectForm import DBObjectForm as base, formactor_action_prefix


class Instrument(base):

    class Inventory(base.Inventory):

        import pyre.inventory

        short_description = pyre.inventory.str('short_description')
        short_description.meta['label'] = 'Name'
        short_description.meta['tip'] = 'Please give this instrument a name'

        category = pyre.inventory.str( 'category' )
        category.meta['label'] = 'Category'
        category.meta['tip'] = (
            'Please specify the category to which this instrument belongs.',
            'Examples: (ins, sans, diffraction)',
            )
        category.meta['tiponerror'] = ()
        
        long_description = pyre.inventory.str('long_description')
        long_description.meta['label'] = 'Description'
        long_description.meta['tip'] = (
            'Please describe this instrument in detail.'
            )
        long_description.meta['tiponerror'] = ()

        pass # end of Inventory


    parameters = ['short_description', 'category', 'long_description']
    DBTable = 'Instrument'


    def __init__(self, name = None):
        if name is None:
            name = 'instrument'

        base.__init__(self, name)

        return


    def expand(self, form, errors=None):
        '''expand an existing form with fields from this component'''
        base.expand( self, form )
        return


    def processUserInputs(self):
        base.processUserInputs( self )
        return


def form(): return Instrument()

# version
__id__ = "$Id$"

# End of file 
