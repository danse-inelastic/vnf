#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                Jiao  Lin
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from pyre.components.Component import Component


class Template(Component):

    def create(self, name=None):
        text = [
            "from vnf.components.FormActor import FormActor as base, action",
            "",
            "",
            "class Actor( base ):",
            "",
            "    class Inventory( base.Inventory ):",
            "",
            "        import pyre.inventory",
            "",
            "        # *** Parameters for this actor ***",
            "",
            "        pass # end of Inventory",
            "",
            "",
            "    def __init__(self, name = '%s'):" % name,
            "        base.__init__(self, name)",
            "        return",
            "",
            "",
            "    def helloWorld(self, director):",
            "        page = director.retrievePage( 'greet' )",
            "        main = page._body._content._main",
            "        document = main.document(",
            "            title='Title goes here')",
            "",
            "        p = document.paragraph()",
            "        p.text = ['Hello, world!']",
            "        return page",
            "",
            "",
            "    def presentform(self, director, errors=None):",
            "        page = director.retrievePage('greet')",
            "        main = page._body._content._main",
            "",
            "        # populate the main column",
            "        document = main.document(title='Present a form')",
            "        document.description = ''",
            "        ",
            "        formcomponent = self.retrieveFormToShow(",
            "            'testform' )",
            "        formcomponent.director = director",
            "",
            "        # create form",
            "        form = document.form(",
            "            name='testform',",
            "            legend= formcomponent.legend(),",
            "            action=director.cgihome)",
            "",
            "        # specify action",
            "        action1 = action(",
            "            label = '', ",
            "            actor = 'testformactor', routine = 'verify',",
            "            arguments = {'form-received': formcomponent.name } )",
            "        from vnf.weaver import action_formfields",
            "        action_formfields( action1, form )",
            "",
            "        # expand the form with fields of the data object that is being edited",
            "        formcomponent.expand(form, errors=errors)",
            "",
            "        # submit button",
            "        submit = form.control(",
            "            name='actor.form-received.submit', type='submit', value='Submit')",
            "",
            "        return page",
            "",
            "",
            "    def verify(self, director):",
            "        form_received = self.form_received",
            "        try:",
            "            inputs = self.processFormInputs(director)",
            "        except InputProcessingError, err:",
            "            errors = err.errors",
            "            return self.presentform(director, errors=error)",
            "",
            "        page = director.retrievePage( 'greet' )",
            "        main = page._body._content._main",
            "        document = main.document(",
            "            title='Title goes here')",
            "",
            "        p = document.paragraph()",
            "        p.text = ['Your input for energy is: %s' % inputs.energy]",
            "        return page",
            "",
            "",
            "",
            "def actor():",
            "    return Actor( ) ",
            "",
            ]
        return text
    

def template():
    return Template('actor', 'template') 



# version
__id__ = "$Id$"

# End of file 
