#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                Jiao  Lin
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from pyre.components.Component import Component


class Template(Component):

    def create(self, name=None):
        text = [
            "PROJECT = vnf",
            "PACKAGE = content/%s" % name,
            "",
            "RECURSE_DIRS = \\",
            "",
            "EXPORT_DATADIRS = \\",
            "	actors \\",
            "	forms \\",
            "",
            "",
            "EXPORT_DATAFILES = \\",
            "",
            "OTHERS = \\",
            "",
            "#--------------------------------------------------------------------------",
            "#",
            "",
            "all: export-package-data",
            "	BLD_ACTION=\"all\" $(MM) recurse",
            "",
            "tidy::",
            "	BLD_ACTION=\"tidy\" $(MM) recurse",
            "",
            "clean::",
            "	BLD_ACTION=\"clean\" $(MM) recurse",
            "",
            "distclean::",
            "	BLD_ACTION=\"distclean\" $(MM) recurse",
            "",
            "",
            "",
            "RSYNC_A = rsync -a",
            "EXPORT_DATA_PATH = $(EXPORT_ROOT)/$(PROJECT)/$(PACKAGE)",
            "",
            "export-package-data:: export-package-datadirs export-package-datafiles",
            "",
            "",
            "export-package-datadirs:: $(EXPORT_DATADIRS) ",
            "	mkdir -p $(EXPORT_DATA_PATH); \\",
            "	for x in $(EXPORT_DATADIRS); do { \\",
            "            if [ -d $$x ]; then { \\",
            "	        $(RSYNC_A) $$x $(EXPORT_DATA_PATH)/ ; \\",
            "            } fi; \\",
            "        } done",
            "",
            "",
            "export-package-datafiles:: $(EXPORT_DATAFILES) ",
            "	for x in $(EXPORT_DATAFILES); do { \\",
            "            if [ -f $$x ]; then { \\",
            "	        $(RSYNC_A) $$x $(EXPORT_DATA_PATH)/$$x ; \\",
            "            } fi; \\",
            "        } done",
            ]
        return text
    

def template():
    return Template('project-makefile', 'template') 



# version
__id__ = "$Id$"

# End of file 
