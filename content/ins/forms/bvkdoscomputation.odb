# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                        (C) 2007  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#



from vnf.components.DBObjectForm import DBObjectForm as base, InputProcessingError


class BvKDOSComputation(base):


    class Inventory(base.Inventory):

        import pyre.inventory
        
        dE = pyre.inventory.str( name = 'dE' )
        dE.meta['label'] = 'Step size in frequency axis'
        dE.meta['tip'] = 'Step size in frequency axis for computing density of states. unit: THz'
        dE.meta['tiponerror'] = (
            'Please enter a positive real number',
            'Typical value is 0.1. Unit: THz',
            )

        pass # end of Inventory


    parameters = [
        'dE',
        ]

    DBTable = 'BvKComputation'


    def __init__(self, name = None):
        if name is None:
            name = 'bvkdoscomputation'

        base.__init__(self, name)

        return


    def expand(self, form, errors = None, properties = None):
        p = form.paragraph()
        p.text = [
            'To compute phonon density of states from BvK model, ',
            'you are required to provide some additional information.',
            'Please fill out the following form:',
            ]
        base.expand(self, form, errors = errors, properties = properties)
        return


    def processUserInputs(self, *args, **kwds):
        errors = []
        self._verify( 'dE', errors )
        if len(errors): raise InputProcessingError, errors
        return base.processUserInputs(self, *args, **kwds)


    def _verify(self, prop, errors):
        value = getattr( self.inventory, prop )
        try:
            value = float(value)
            if value < 0: errors.append( prop )
        except:  errors.append(prop)
        return


def form(): return BvKDOSComputation()

# version
__id__ = "$Id$"

# End of file 
