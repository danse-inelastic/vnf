# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                        (C) 2007  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#



from vnf.components.DBObjectForm import DBObjectForm as base, InputProcessingError, formactor_action_prefix
from vnf.components.Actor import actionRequireAuthentication

class SQE(base):


    class Inventory(base.Inventory):

        import pyre.inventory
        
        uploadid = pyre.inventory.str('uploadid')
        
        pass # end of Inventory

    parameters = ['short_description']
    DBTable = 'sqes'

    def __init__(self, name = None):
        if name is None:
            name = 'sqe'

        base.__init__(self, name)
        return


    def expand(self, form, errors = None, properties = None):

        base.expand(self, form, errors=errors, properties=properties)
        
        prefix = formactor_action_prefix

        director = self.director

        # unique id for the upload
        from vnf.components.misc import new_id
        uploadid = new_id(director)

        # remember this upload id
        form.hidden(name='%s.uploadid' % prefix, value=uploadid)

        # Hint
        help = (
             'Please upload your S(Q,E) histogram file in hdf5 format by '\
             'clicking the following button.'
             )
        # the uploader
        import vnf.content
        action = actionRequireAuthentication(
            sentry = director.sentry,
            actor = 'upload', 
            routine = 'receive_file',
            id = uploadid,
            )
        uploader = vnf.content.uploader(action, label="Upload S(Q,E)", help=help)
        if errors and 'upload' in errors:
            uploader.error = errors['upload']
        form.add(uploader)
        
        # submit button
        submit = form.control(name="submit", type="submit", value="Submit")
        return


    def processUserInputs(self):
        short_description = self.inventory.short_description
        uploadid = self.inventory.uploadid
        return {
            'short_description': short_description,
            'uploadid': uploadid,
            }



def form(): return SQE()


# version
__id__ = "$Id$"

# End of file 
