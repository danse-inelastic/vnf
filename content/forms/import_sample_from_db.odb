# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                        (C) 2007  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from vnf.components.Form import Form as base
from vnf.components.PyHtmlTable import PyHtmlTable
from vnf.components.Actor import actionRequireAuthentication, action_link


class Form( base ):

    class Inventory( base.Inventory ):

        import pyre.inventory as inv
        ax = inv.str('kernel',default='gulp')
#        kernel.meta['tip'] = 'type of kernel'
        
        selected_kernel_id = inv.str( 'kernel_id' )

    def  expand(self, form):
        '''expand an existing form with fields from this component'''
        prefix = formactor_action_prefix
        p = form.paragraph()
        p.text = ['''Import the material from the Crystallograpy Open Database.''']
        
        name = form.text(id='name', name='name', label='Sample Name')
        name.help = 'An identifying name for this sample.'
        
        p = form.paragraph()
        p.text = ['''<a href="/java/cod2.jnlp">Launch the Crystallography Open Database</a>''']
        
        p = form.paragraph()
        p.text=['Input the shape parameters for a flat plate sample']
        height = form.text(id='height', name='%s.height' % prefix, label='Height')        
        width = form.text(id='width', name='%s.width' % prefix, label='Width')   
        thickness = form.text(id='thickness', name='%s.thickness' % prefix, label='Thickness')  

    def processUserInputs(self):
        'process user input '
        return 


#formactor_action_prefix = 'actor.form-received' # assumed actor is a form actor
from vnf.components.DBObjectForm import formactor_action_prefix

def form(): return Form( 'sampleInput' )


# version
__id__ = "$Id$"

# End of file 
