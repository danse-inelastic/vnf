#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

from vnfb.components.QEAnalysis import Actor as base

class Actor(base):

#    def content(self, director):
#        self._showPhononPlot(director, sD)  # Phonon DOS

    def _exportAction(self, director, container):
        "Button related to export"
        simrecord   = SimulationRecord(director, self.id)
        sim         = simrecord.record()
        sA          = container.section()

        #if not sim and sim.type    == "Multiple Phonon":   # Make sure that jobs exist with DOS or Dispersion
        self._showPhononDos(sA, sim)
        self._showPhononDispersion(sA, sim)


    def _showPhononPlot(self, director, section):
        "Plot electron DOS"
        dosfile      = self._phononDosFile()

        if dosfile is None:
            return

        # Populate D(E) list from file
        data    = parsePHFile(dosfile)
        if data is None:
            return

        (e,  state) = data
        plot = lc.plot2d(Class="default-size-plot")
        plot.curve(x=e, y=state, label='Phonon DOS')

        section.add(lc.paragraph(text="Phonon DOS", Class="qe-section"))
        section.add(plot)



    # MATDYN simulation task. Should have matdyn.dos file
    def _phononDosFile(self):
        "Returns absolute path of the MATDYN file"
        # Example: "/home/dexity/exports/vnf/vnfb/content/data/tmp/tmpVr7_LD/4IJW2PEI/matdyn.dos"
        for jit in self._jitlist:
            if jit[0] is None:   # If job is None
                continue

            if jit[1] is not None and jit[2].type == "MATDYN":   # MATDYN type
                dataroot    = self._dataroot()
                results     = ResultInfo(self._director, self.id, "MATDYN")
                if results.ready():
                    path        = os.path.join(results.tardir(), "matdyn.dos")  # dos name is hardcoded
                    filepath    = os.path.join(dataroot, path)
                    return filepath

        return None


    # XXX: Keep for presentation only
    def _showPhononDos(self, section, sim):
        linkDos     = lc.link(label="Export Phonon DOS",
                            Class="qe-action-edit",
                            onclick = load(actor        = 'material_simulations/espresso/phonondos',
                                            routine     = 'create',
                                            simid       = self.inventory.id,
                                            simtype     = self.simtype))
        linkDos.tip = "Export Phonon DOS to Atomic Structure"

        # Uncomment
#        if self._phononDosCreated(sim):     # Check if DOS created
#            linkDos.label   = "Phonon DOS"
#            linkDos.onclick = load(actor        = 'atomicstructure',
#                                    routine     = 'showOverview',
#                                    id          = sim.structureid)  # matter id

        section.add(linkDos)


    # XXX: Keep for presentation only
    def _showPhononDispersion(self, section, sim):
       linkDisp     = lc.link(label="Export Phonon Dispersion",
                            Class="qe-action-edit",
                            onclick = load(actor        = 'material_simulations/espresso/phonons',
                                            routine     = 'create',
                                            simid       = self.inventory.id,
                                            simtype     = self.simtype))
       linkDisp.tip = "Export Phonon Dispersion to Atomic Structure"
       section.add(linkDisp)


    def _simData(self, splitter):
        "Simulation specific data. Should be overwritten by subclass"



def actor():
    return Actor(name='material_simulations/espresso-analysis/phonon-multiple')

__date__ = "$Mar 14, 2010 10:30:21 AM$"


