#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

from vnfb.qeutils.qegrid import QEGrid

import luban.content as lc
from vnfb.qeutils.qeutils import defaultInputName, readRecordFile
from luban.content import load, select
from luban.content.FormTextArea import FormTextArea

from vnfb.components.QEConvergence import QEConvergence as base

class Actor(base):
    class Inventory(base.Inventory):
        import pyre.inventory
        convid          = pyre.inventory.str('convid', default='')
        paramid         = pyre.inventory.str('paramid', default='')
        paramname       = pyre.inventory.str('paramname', default='')
        taskid          = pyre.inventory.str('taskid', default='')


    # XXX: Extend "PW" to task type
    def _viewIndicator(self, director, section):
        #self._conv    = director.clerk.getQEConvergences(id = self.convid) # ?
        #self._param     = director.clerk.getQEConvParams(id = self.paramid)

        path = []
        path.append(('Simulations ', load(actor='materialsimulation')))
        path.append(('Quantum Espresso ', load(actor='materialsimulation')))
        path.append(('%s ' % self.id, load(actor    = 'material_simulations/espresso/sim-view',
                                           id       = self.id)))
        path.append(('Convergence Tests', load(actor    = 'material_simulations/espresso-convergence/view',
                                            id       = self.id)))
        path.append(("Test: %s" % self.convid, load(actor    = 'material_simulations/espresso-convergence/conv-view',
                                                    id       = self.id,
                                                    convid   = self.convid)))

        path.append((self._paramLink(), load(actor    = 'material_simulations/espresso-convergence/param-view',
                                             id       = self.id,
                                             convid   = self.convid,
                                             paramid  = self.paramid) ))
        path.append("Create PW input")
        section.add(director.retrieveVisual('view-indicator', path=path))


    def _refreshAction(self, section):
        section.add(lc.link(label="Refresh",
                            Class="qe-action-back",
                            onclick = load(actor      = 'material_simulations/espresso-convergence/input-create',
                                             id       = self.id,
                                             convid   = self.convid,
                                             paramid  = self.paramid)))


    def _mainContent(self, director, splitter):
        content     = splitter.section()
        table       = QEGrid(lc.grid())
        content.add(table.grid())

        text        = FormTextArea( name    = "text",
                                    value   = "Hi", #self._inputText(director, self._input),
                                    Class   = "qe-textarea-inputs")
        table.addRow((text,))


    # Taken from actors/material_simulations/espresso/input-edit.odb
#    def _inputText(self, director, input):
#        fname   = defaultInputName(input.type)
#        s       = readRecordFile(director.dds, input, fname)
#        if s:
#            return s
#
#        return ""

    def _paramLink(self):
        s   = "Parameter"
        if self.paramname == "":    # no paramname is passed
            return s

        s   += ": %s" % self.paramname
        return s


    def _configure(self):
        super(Actor, self)._configure()
        self.convid       = self.inventory.convid
        self.paramid      = self.inventory.paramid
        self.paramname    = self.inventory.paramname
        self.taskid       = self.inventory.taskid

def actor():
    return Actor(name='material_simulations/espresso-convergence/input-create')



__date__ = "$May 2, 2010 8:52:56 AM$"


