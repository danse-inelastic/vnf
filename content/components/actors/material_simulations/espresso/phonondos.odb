#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

from vnfb.utils.qeutils import stamp2date
from vnfb.utils.qegrid import QEGrid

from luban.content import select
from luban.content import load

import luban.content as lc
from vnfb.utils.qeutils import remoteResultsPath
from luban.components.AuthorizedActor import AuthorizedActor as base

# Requires simulation id, config id and config type: (id, configid, type)
class Actor(base):

    class Inventory(base.Inventory):
        import pyre.inventory
        simid          = pyre.inventory.str('simid', default='')


    def create(self, director):
        # 1. Retrieve results: move matdyn jobs directory to local server
        # 2. Create phonondoses record
        # 3. Convert matdyn -> idf to phonondoses directory
        #
        job     = self._phononDosJob(director)
        print self.simid

    def _retrieveResults(self):
        """
        Retrieve results. Move matdyn jobs directory to local server
        E.g.: dexity@foxtrot.danse.us:/home/dexity/espresso/qejobs/643E2QQI ->
                /home/dexity/vnf/content/data/qejobs/643E2QQI/
        """
        pass

    def _createRecord(self):
        pass

    def _convert(self):
        pass

    def _phononDosJob(self, director):
        #jobs    =
        return


    def __init__(self):
        super(Actor, self).__init__(name='material_simulations/espresso/phonondos')

        return


    def _configure(self):
        super(Actor, self)._configure()
        self.simid             = self.inventory.simid


    def _init(self):
        super(Actor, self)._init()
        return

def actor():
    return Actor()


__date__ = "$Jan 18, 2010 10:30:25 PM$"


