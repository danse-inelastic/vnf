#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

# TODO:

# Remove (redefine) the following parameters:
# PW:
#   control.prefix

#


from vnfb.dom.QEConfiguration import QEConfiguration
from vnfb.qeutils.qeutils import writeRecordFile, defaultInputName

from luban.content import load
from vnfb.components.QEGenerator import QEGenerator as base

# Requires simulation id,
class Actor(base):

    class Inventory(base.Inventory):
        import pyre.inventory
        subtype     = pyre.inventory.str('subtype', default='')


    def content(self, director):
        "Populates the content for creation of input configuration"
        title   = "Create Input Configuration: %s" % self.inventory.type
        label   = "Create Input Configuration"
        return self._document(director, title, label)


    def createRecord(self, director):
        "Create configuration record"
        self.createDBRecord(director)
        self.createFile(director)

        return load(actor = 'material_simulations/espresso/sim-view', id = self.id)


    def createDBRecord(self, director):
        # 'text' field is not stored
        params  = {"taskid":        self.inventory.taskid,
                   "filename":      self._fname(),
                   "description":   self._description(),
                   "type":          self.inventory.type
                   }
        self.input  = QEConfiguration()
        self.input.setDirector(director)
        self.input.createRecord(params)
        if self.inventory.subtype != "":
            self._updateTaskRecord(director)


    def createFile(self, director): 
        fn      = defaultInputName(self.inventory.type)  # fn is fixed and doesn't depend on the filename record
        writeRecordFile(director.dds, self.input, fn, self.inventory.text)


    # Hack that allows to use description field of *task* for subtype
    def _description(self):
        if self.inventory.subtype != "":
            return self.inventory.subtype
        
        return self.inventory.description


    def _updateTaskRecord(self, director):
        task    = director.clerk.getQETasks(id = self.taskid)
        params  = {"short_description": self._description(),}
        task.setDirector(director)
        task.updateRecord(params)


    def _fname(self):
        # Filename is not set
        if self.fname == '':
            return defaultInputName(self.inventory.type)

        return self.fname


    def _verify(self):
        #Note:
        #   - Do not allow the following characters in the input filename:
        #	"/"
        #	"'"
        #	"""
        #   - filename should not be empty
        pass

    def __init__(self):
        super(Actor, self).__init__(name='material_simulations/espresso/input-create')


    def _configure(self):
        super(Actor, self)._configure()
        self.subtype        = self.inventory.subtype


    def _init(self):
        super(Actor, self)._init()
        return

def actor():
    return Actor()


__date__ = "$Jan 13, 2010 10:50:06 AM$"


