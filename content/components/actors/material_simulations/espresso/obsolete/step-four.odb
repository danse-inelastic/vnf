#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

# OBSOLETE !!!

from vinil.utils.const import STEPS

from luban.content import select
from luban.content.Paragraph import Paragraph
from luban.content.Document import Document
from luban.content.HtmlDocument import HtmlDocument
from luban.content import load
from luban.content.Link import Link
from luban.content.Splitter import Splitter
from luban.content.FormSelectorField import FormSelectorField

from vinil.components.Actor import Actor as base
class Actor(base):

    class Inventory(base.Inventory):
        import pyre.inventory
        id      = pyre.inventory.str('id')

    def content(self, director):
        from vinil.utils.simulationsteps import SimulationSteps
        from vinil.utils.stepper import Stepper
        splitter    = Splitter(orientation='vertical', id="step-splitter")

        simsteps    = SimulationSteps(current=4)
        s_steps     = simsteps.getSteps()
        splitter.add(s_steps)

        s_content   = splitter.section()

        d           = Document(Class="step-content")
        text = """Here you can review simulation before to submit to Jobs Queue. If you agree with these
        settings, then click "Next" and you simulation will be added to jobs queue """
        d.add(Paragraph(text=text))

        # Simulation
        d.add(Paragraph(text="Simulation:"))
        simtext = """
        Simulation Name: Ni_Energy,
        Description: Multy-Phonon DOS simualtion,
        Type: Total Energy,
        Package: Quantum Espresso,
        Formula: Ni,
        Created: 1257354471
        [Edit]
        """
        d.add(Paragraph(text=simtext))

        # Configuration
        d.add(Paragraph(text="Configuration:"))
        d.add(Paragraph(text="PW  --------> DOS"))
        d.add(Paragraph(text=" (ni.scf.in)  (ni.dos.in) [Edit] "))

        # Simulation Parameters
        d.add(Paragraph(text="Simulation Parameters:"))
        paramstext  = """
        Server Name: foxtrot.danse.us,
        Number of Processes: 8,
        Number of Nodes: 8,
        Processors Per Node: 12,
        Npool: 8,
        Executable: mpirun,
        Additional Parameters: --mca btl openib,sm,self,
        Modules: openmpi/gnu acml/4.3.0_gfortran64_int32 espresso, 
        [Edit] 
        """
        d.add(Paragraph(text=paramstext))
        s_content.add(d)

        # Change label on the "Next" button to "Submit to Queue"
        linklist    = (("espresso/step-three", "link", self.id), ("jobs/submitted", "submit", self.id))
        stepper     = Stepper(linklist)
        s_stepper   = stepper.getStepper()
        splitter.add(s_stepper)

        return splitter

    def pathlist(self, director):
        sim     = director.clerk.getSimulations(id=self.id)
        self.pathlist = [("Home","greet","link"),
                     ("Simulations", "simulations", "link"),
                     ("Quantum Espresso", "espresso/index", "link"),
                     (sim.sname, "espresso/sim-view", "link", self.id),
                     (STEPS[3], None, None)
                     ]

        return self.pathlist

    def __init__(self, *args, **kwds):
        super(Actor, self).__init__(*args, **kwds)

        return


    def _configure(self):
        super(Actor, self)._configure()
        self.id = self.inventory.id
        return


    def _init(self):
        super(Actor, self)._init()
        return

def actor():
    return Actor('espresso/step-four')

__date__ = "$Sep 29, 2009 7:50:12 PM$"


