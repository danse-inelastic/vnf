#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


import luban.content as lc


from luban.components.AuthorizedActor import AuthorizedActor as base


class Actor(base):


    class Inventory(base.Inventory):

        import pyre.inventory

        type = pyre.inventory.str('type')
        id = pyre.inventory.str('id')


    def updatePhononViewForMatter(self, director):
        doc = self.createPhononDocForMatter(director)
        return lc.select(id='computed-phonons-body').replaceContent(doc)


    def createPhononDocForMatter(self, director):
        doc = lc.document()
        doc.add(self.createDispersionDocForMatter(director))
        return doc


    def createDispersionDocForMatter(self, director):
        doc = lc.document()

        matteraccess = director.retrieveDOMAccessor('matter')
        matter = matteraccess.getMatter(self.inventory.type, self.inventory.id)
        
        phononaccess = director.retrieveDOMAccessor('phonon')
        disps = phononaccess.getDispersions(matter)
        
        if not disps:
            doc.paragraph(text=['There is no dispersion calculated.'])

        else:
            doc.paragraph(text=['dispersion table'])
            
        return doc
    
    
    def __init__(self, name='getphononresults'):
        super(Actor, self).__init__(name)
        return


def actor(): return Actor()


# version
__id__ = "$Id$"

# End of file 

