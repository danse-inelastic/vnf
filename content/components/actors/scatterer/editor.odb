#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from luban.content import load, select, alert

from luban.components.AuthorizedActor import AuthorizedActor as base


class Actor(base):


    class Inventory(base.Inventory):

        import pyre.inventory
        id = pyre.inventory.str(name='id')

        matter = pyre.inventory.str(name='matter')


    def selectMatter(self, director):
        domaccess = self._domaccess(director)
        id = self.inventory.id

        # scatterer record
        record = domaccess.getRecord(id)

        #
        matter = self.inventory.matter
        if not matter: raise RuntimeError

        #
        record.matter = matter

        domaccess.updateRecordWithID(record)
        return matter


    def createMatterView(self, director):
        id = self.inventory.id
        return director.retrieveVisual('scatterer/editor/matterview', id=id, director=director)


    def createMatterSelector(self, director):
        id = self.inventory.id
        return director.retrieveVisual('scatterer/editor/matterselector', id=id, director=director)


    def _domaccess(self, director):
        return director.retrieveDOMAccessor('scatterer')


    def __init__(self, name='scatterer/editor'):
        super(Actor, self).__init__(name)
        return


def actor(): return Actor()


# version
__id__ = "$Id$"

# End of file 

