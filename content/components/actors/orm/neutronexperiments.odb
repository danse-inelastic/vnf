#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#



#
import luban.content as lc
from luban.content import select, load, alert


#
from vnfb.dom.neutron_experiment_simulations.NeutronExperiment import NeutronExperiment

from luban.components.Actor import Actor
import luban.orm
base = luban.orm.object2actor(NeutronExperiment)
class Actor(base):

    class Inventory(base.Inventory):

        import luban.inventory


    def displayProperties(self, director):
        # this is overloaded to have a better view of an experiment
        # this view is concise and not graphical

        # the target
        experiment = self._load(director)

        # k,v pair
        items = []
        
        # instrument
        instrument = experiment.instrument
        items.append(('instrument', instrument.name))

        # sample
        sample = experiment.sample
        if sample is not None:
            items.append(('sample', sample.__class__.__name__))

        # ncount
        items.append(('ncount', experiment.ncount))

        doc = lc.document(Class='container')
        grid = lc.grid(); doc.add(grid)
        for key, value in items:
            row = grid.row()
            row.cell(Class='property-name').add(key)
            row.cell(Class='property-value').add(str(value))
            continue

        return doc
        


def actor():
    return Actor('orm/neutronexperiments')


# version
__id__ = "$Id$"

# End of file 
