#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#



#
import luban.content as lc
from luban.content import select, load, alert


#
from vnf.dom.AtomicStructure import Structure, Lattice, Atom

from luban.components.Actor import Actor
import luban.orm
base = luban.orm.object2actor(Lattice)
class Actor(base):

    class Inventory(base.Inventory):

        import luban.inventory


    def _reportErrors(self, errors):
        sum = errors.get('sum')
        if not sum:
            actions = super(Actor, self)._reportErrors(errors)
        else:
            actions = [alert(sum)]
        return actions


    def _getInputErrors(self):
        errors = super(Actor, self)._getInputErrors()
        if not errors:
            self._castInventoryProperties()
            alpha = self.inventory.alpha
            beta = self.inventory.beta
            gamma = self.inventory.gamma
            max1 = max(alpha, beta, gamma)
            sum_of_smaller_numbers = alpha+beta+gamma - max1
            if sum_of_smaller_numbers <= max1:
                errors['sum'] = "The angles must satisfy angle1+angle2>angle3"
        return errors


def actor():
    return Actor('orm/lattices')


# version
__id__ = "$Id$"

# End of file 
