# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                      (C) 2008-2010  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


import journal, os
debug = journal.debug('analysis')

from vnfb.components.JobBuilder import JobBuilder as base

class Builder(base):

    def __init__(self, name, path):
        base.__init__(self, name, path)

    def render(self, computation, db=None, dds=None):
        # one file needs to be copied to job directory   
        orm = self.director.clerk.orm  
        analysisObj = orm.record2object(computation)   
#        basename = str(computation.__class__.__name__)
#        files = [+'.inp']
        files = [analysisObj.inputFileName]
        # copy files to job directory
        job = computation.getJob(self.db)
        for f in files:
            dds.copy(computation, f, job, f)

        # 3. add run.sh
        files.append( self._make_script(computation) )
        return files    
    
    def _make_script(self, computation):
        job = computation.getJob(self.db)
        orm = self.director.clerk.orm  
        analysisObj = orm.record2object(computation)
        np = job.numprocessors()
        #octopod
        if job.server.id=='server000':
            cmds = [
                '#!/usr/bin/env bash',
                '. /home/linjiao/.analysis-env',
                'mpirun -np %d parnasis --%s --inp %s' % (np, analysisObj.abbrev, analysisObj.inputFileName),
                '',
                ]
        #foxtrot
        elif job.server.id=='server002':
            cmds = [
                '#!/usr/bin/env bash',
                'python -V',
                'source /home/jbrkeith/.bash_profile',
                #'python=python2.6'
                'echo $PYTHONPATH',
                'python -V',
                #"export procs=`wc -l $PBS_NODEFILE | perl -ane 'print $F[0] . \"\n\"'`",
                'mpirun -np %d python parnasis --%s --inp %s' % (np, analysisObj.abbrev, analysisObj.inputFileName),
                '',
                ]
        script = self.shscriptname
        path = self._path(script)
        open(path, 'w').write('\n'.join(cmds))
        return script 


def job_builder(name, path):
    return Builder(name, path)


# version
__id__ = "$Id$"

# End of file 
