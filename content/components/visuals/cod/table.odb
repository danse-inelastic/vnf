# -*- Python -*-


from luban.content import select, load, alert
import luban.content as lc


def visual(data, director, cols=None):
    from luban.content.table import Model, View, Table
    from luban.content import load
    from luban.content.Link import Link
    
    class model(Model):

        selected = Model.descriptors.bool(name='selected')
        
        #id = Model.descriptors.link(name='id')
        #id = Model.descriptors.str(name='id')
        
        lattice = Model.descriptors.str(name='lattice')
        #a = Model.descriptors.str(name='a')
        #b = Model.descriptors.str(name='b')
        #c = Model.descriptors.str(name='c')
        #alpha = Model.descriptors.str(name='alpha')
        #beta = Model.descriptors.str(name='beta')
        #gamma = Model.descriptors.str(name='gamma')

        #volume = Model.descriptors.str(name='volume')

        #nelements = Model.descriptors.str(name='nelements')

        spacegroup = Model.descriptors.str(name='spacegroup')

        formula = Model.descriptors.str(name='formula')

        text = Model.descriptors.str(name='text')

        #row_identifiers = ['id']

    columns = [
        View.Column(label='', measure='selected'),
        #View.Column(label='ID', measure='id'),
        View.Column(label='Lattice', measure='lattice'),
        #View.Column(label='a', measure='a'),
        #View.Column(label='b', measure='b'),
        #View.Column(label='c', measure='c'),
        #View.Column(label='alpha', measure='alpha'),
        #View.Column(label='beta', measure='beta'),
        #View.Column(label='gamma', measure='gamma'),
        
        #View.Column(label='Volume', measure='volume'),
        #View.Column(label='# of elements', measure='nelements'),

        View.Column(label='Space group', measure='spacegroup'),
        View.Column(label='Formula', measure='formula'),
        View.Column(label='Text', measure='text'),
        ]
    if cols:
        columns = filter(lambda col: col.measure in cols, columns)

    view = View(columns=columns, editable=False)

    table = Table(model=model, data=data, view=view, id='cod-table')

    return table
    

