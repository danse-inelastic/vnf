#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                               Alex Dementsov
#                      California Institute of Technology
#                        (C) 2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


import luban.content as lc
from luban.content import select
from luban.content import load
from vnfb.qeutils.qegrid import QEGrid
from luban.content.FormTextField import FormTextField
from luban.content.FormTextArea import FormTextArea
from luban.content.FormSubmitButton import FormSubmitButton


def visual(actor, director, structureid, simtype):
    form        = lc.form(id='create-simulation-form')
    table       = QEGrid(lc.grid(Class="qe-form"))
    form.add(table.grid())

    fname           = FormTextField(name = "fname", value = actor.fname)
    description     = FormTextField(name = "description", value=actor.description)   # Make as textarea
    text            = FormTextArea(name="text", value=actor.text, Class="qe-text-area")

    submit      = FormSubmitButton(label="Create Input Configuration")
    cancel      = lc.button(label="Cancel")
    cancel.onclick  = load(actor = 'material_simulations/espresso/sim-view', id=actor.id)

    st          = QEGrid(lc.grid()) # Submit Table
    st.addRow((submit, cancel), ("qe-action-accept", "qe-action-cancel"))

    table.addRow(("Name:", fname))
    table.addRow(("Description:", description))
    table.addRow(("Configuration: *", text))
    table.addRow(("", st.grid()))

    table.setColumnStyle(0, "qe-form-label")
    table.setColumnStyle(1, "qe-form-field")

    form.onsubmit   = select(element=form).submit(actor     = 'material_simulations/espresso/input-create',
                                                  routine   = 'createRecord',
                                                  taskid    = actor.taskid,
                                                  id        = actor.id,
                                                  type      = actor.type,
                                                  subtype   = actor.subtype)

    return form


__date__ = "$Jan 12, 2010 7:21:52 PM$"


