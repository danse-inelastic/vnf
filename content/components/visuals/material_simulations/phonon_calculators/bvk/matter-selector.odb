#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from luban.content import load, select, alert
import luban.content as lc


class Factory(object):

    matter_view_id = 'bvk-matter-view'


    def __init__(self, target, id, director):
        '''
        id: id of the bvk computation
        target: target of the bvk computation
        '''
        self.id = id
        self.target = target
        self.director = director
        return


    def __call__(self):
        doc = lc.document(id='bvk-matter-selector-doc')
        doc.Class='mastertable-as-selector-panel'

        doc.paragraph(
            text=[
            'Please select one atomic structure from the following table,',
            'you can search for the structure using the filtering controls.',
            ]
            )

        # the container of the atomicstructure selector
        container = lc.document(id='atomicstructure-selector-container')
        container.Class='master-table-wrapper'
        doc.add(container)
        container.oncreate = [
            select(element=container).append(
              load(actor='selectoneatomicstructure', routine='createListView')
              ),
            ]

        # cancel
        c = lc.link(label='cancel'); c.Class='float-right'; doc.add(c)
        c.onclick = select(id=self.matter_view_id).replaceBy(
            load(actor='material_simulations/phonon_calculators/bvk',
                 routine='onCancelMatterSelector',
                 computation_id = self.id, target = self.target)
            )

        # select button
        b = lc.button(label='select'); doc.add(b)
        selected_matter = select(id='atomicstructure-table').table(
            'getIdentifiersForSelectedRow', colname='selectone')
        restart_withstructure = load(
            actor='material_simulations/phonon_calculators/bvk', routine='start',
            computation_id=self.id, target=self.target,
            atomicstructure_id = selected_matter,
            )
        b.onclick = restart_withstructure
        
        return doc
    
    
def visual(target, id, director):
    return Factory(target, id, director)()


# version
__id__ = "$Id$"

# End of file 

