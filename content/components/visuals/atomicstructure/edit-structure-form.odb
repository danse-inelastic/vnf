#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                  Jiao Lin
#                     California Institute of Technology
#                       (C) 2009  All Rights Reserved
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


# a simple form to create a atomic structure
# it collaborates with actor atomicstructure/create-structure-form


from luban.content import load, select, alert
import luban.content as lc

from luban.content.FormTextField import FormTextField
from luban.content.FormSelectorField import FormSelectorField
from luban.content.FormSubmitButton import FormSubmitButton


def visual(director, id):
    doc = lc.document()
    doc.add(viewIndicator(director, id))

    container = doc.document(id='edit-atomic-structure-form', Class='container')

    #
    cancel = load(actor='atomicstructure', routine='canceledit', id = id)
    delete = [
        load(actor='atomicstructure', routine='delete', id = id),
        load(actor='atomicstructure', routine='showListView'),
        ]
    
    controls = container.document(Class='controls')
    cancellink = lc.link(label='cancel', onclick=cancel, Class='cancel')
    controls.add(cancellink)
    deletelink = lc.link(label='delete', onclick=delete, Class='delete')
    controls.add(deletelink)
    
    view = editview(director, id)
    container.add(view)

    controls2 = container.document(Class='controls')
    cancellink2 = lc.link(label='cancel', onclick=cancel, Class='cancel')
    controls2.add(cancellink2)
    deletelink2 = lc.link(label='delete', onclick=delete, Class='delete')
    controls2.add(deletelink2)
    return doc


def editview(director, id):
    domaccess = director.retrieveDOMAccessor('atomicstructure')
    struct = domaccess.getAtomicStructure(id)
    drawer = director.painter.paintObj.drawers.getDrawer(struct.__class__)
    return drawer(struct)


def viewIndicator(director, id):
    path = []
    path.append(('atomic structures', load(actor='atomicstructure')))

    if id:
        label = 'structure %s' % id
    else:
        label = 'new structure'
    path.append(label)
    return director.retrieveVisual('view-indicator', path=path)


# version
__id__ = "$Id$"

# End of file 
