# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2010  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from luban.content import load, select, alert
import luban.content as lc


class Factory(object):


    def __init__(self, id, director):
        domaccess = director.retrieveDOMAccessor('experiment')
        self.domaccess = domaccess
        self.director = director
        self.id = id
        self.experiment = domaccess.getExperiment(id)
        self.instrument = self.experiment.instrument
        self.sample = self.experiment.sample
        self.sampleenvironment = self.experiment.sampleenvironment
        return
    

    def __call__(self):
        # check if it is ready to work on this form
        if self._isNotReady():
            return self._notReadyDocument()
        #
        domaccess = self.domaccess
        if self.sampleenvironment is None:
            self.sampleenvironment = domaccess.createSampleEnvironment(self.experiment)
        
        # the form
        doc = lc.document(Class='container')
        doc.add(self._buildSumary())
        #
        switch = load(
            actor='job', routine='create',
            computation_type = 'neutron_experiment_simulations.NeutronExperiment.NeutronExperiment',
            computation_id = self.id
            )
        continuebutton = lc.button(label='create job', onclick=switch)
        doc.add(continuebutton)
        return doc


    def _buildSumary(self):
        exp = self.experiment
        director = self.director
        getDrawer = director.painter.paintObj.drawers.getDrawer
        drawer = getDrawer(exp.__class__)
        doc = drawer(exp, readonly=True, editlink=False)
        return doc


    def _notReadyDocument(self):
        missing = self.domaccess.getMissingInformation(experiment = self.experiment)
        doc = lc.document()
        doc.paragraph(text=['You are not ready to configure the sample: ',
                            '%s is missing' % missing])

        l = lc.link(
            label = 'start from beginning',
            onclick = select(id='experimentwizard-startform-tab').tab('select')
            )
        doc.add(l)
        return doc


    def _isNotReady(self):
        return not self.domaccess.isConstructued(experiment=self.experiment)


def visual(id, director):
    return Factory(id, director)()

# version
__id__ = "$Id$"

# End of file 
