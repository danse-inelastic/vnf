# -*- Python -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                      California Institute of Technology
#                        (C) 2008  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from vnf.components.ComputationResultRetriever import ComputationResultRetriever as base
class Retriever(base):

    def _retrieveResultsFor(self, computation):
        director = self.director
        db = director.clerk.db
        orm = director.clerk.orm
        analysisObj = orm.record2object(computation)

        # must have a job
        self.declareProgress(0.1, 'look up job')
        job = computation.getJob(db)

        # check result is available
        self.declareProgress(0.2, 'check if results exist')
        self._check_results_sanity(expected_results=[analysisObj._vacfFile], job=job)

        # create a sqe record
        self.declareProgress(0.4, 'create a data object to store the result')
        from vnf.dom.material_simulations.Vacf import VacfTable
        vacf = self._make_result_holder(computation, VacfTable)
        vacf.matter = computation.matter
        db.updateRecord(vacf)

        # save the result from job to dos
        self.declareProgress(0.5, 'get result from server')
        self._save_result(computation, job, analysisObj._vacfFile, vacf, 'data.plot')
        return


def retriever():
    return Retriever('vacfdiffusioncalc')


# version
__id__ = "$Id$"

# End of file 
