#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                Jiao Lin
#                      California Institute of Technology
#                        (C) 2008  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from pyre.components.Component import Component as base


class Component(base):


    def initdb(self):
        director = self.director
        domaccess = director.retrieveDOMAccessor('material_simulations/phonon_calculators/bvk')
        orm = domaccess.orm

        # find the al model
        from vnf.dom.material_simulations.BvKModel import BvKModel
        BvKModelTable = orm(BvKModel)
        models = orm.db.query(BvKModelTable).filter("short_description like 'bvk model of fcc Al at 300 from literature%'").all()
        if not models: raise RuntimeError, "could not find bvk model for fcc Al"

        model = models[0]
        matter = model.matter.dereference(orm.db)

        #
        from vnf.dom.material_simulations.BvKComputation import BvK_GetPhonons_Table
        computation = BvK_GetPhonons_Table()
        computation.id = 'fortest'
        computation.matter = matter
        computation.model = model
        orm.db.insertRow(computation)
        
        # server
        serveraccess = director.retrieveDOMAccessor('server')
        server = serveraccess.getServerRecord('server000')

        # job
        from vnf.dom.Job import Job
        job = Job()
        job.id = 'job-bvk_getphonons-fortest'
        job.short_description = 'job for testing the computation type bvk_getphonons'
        job.server = server
        job.computation = computation
        orm.db.insertRow(job)
        
        return


    def __init__(self):
        base.__init__(self, 'bvk_getphonons', 'initdb')
        return



def initdb(): return Component()


# version
__id__ = "$Id$"

# End of file 
