#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                Jiao Lin
#                      California Institute of Technology
#                      (C) 2008-2010  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from pyre.components.Component import Component as base


class Component(base):


    class Inventory(base.Inventory):

        import pyre.inventory


    def initdb(self):
        db = self.director.clerk.db
        db.createAllTables()
        
        for member, group in assignments:

            # member
            context, name = member
            member = _getRole(name, context, db)

            # group
            context, name = group
            group = _getRole(name, context, db)

            #
            member.join(group, db)
            continue
        
        return


def _getRole(name, context, db):
    try:
        return db.query(Role).filter_by(
            rolename = name, 
            context = context)\
            .one()
    except:
        import traceback
        tb = traceback.format_exc()
        msg = 'failed to find role (name=%r, context=%r)' % (name, context)
        msg += '\nOriginal exception: %s' % tb
        raise RuntimeError, msg


from vnf.dom.RoleHasRole import join, Role


assignments = [
    (('vnf', 'core-developer'), ('vnf', 'developer')), # vnf core developers are vnf developers
    (('vnf', 'developer'), ('vnf', 'user')), # vnf developers are always also vnf users
    ]


def initdb(): return Component('initdb-user_has_roles', 'initdb')


# version
__id__ = "$Id$"

# End of file 
